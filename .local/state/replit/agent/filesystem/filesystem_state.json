{"file_contents":{"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Iteeha Coffee Website\n\n## Overview\n\nThis is a full-stack web application for Iteeha Coffee, featuring a modern React frontend with a Node.js/Express backend. The application showcases the coffee shop's brand, story, gallery, and contact information through an elegant, responsive website. Built with TypeScript throughout and leveraging modern web technologies like shadcn/ui components, Tailwind CSS, and TanStack Query for state management.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript and Vite for fast development and building\n- **Routing**: Wouter for lightweight client-side routing\n- **UI Components**: shadcn/ui component library built on Radix UI primitives\n- **Styling**: Tailwind CSS with custom coffee-themed color palette and design system\n- **State Management**: TanStack Query for server state management\n- **Build Tool**: Vite with custom configuration for development and production builds\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ESM modules\n- **Development**: tsx for TypeScript execution in development\n- **Build**: esbuild for fast production builds\n- **Storage**: In-memory storage implementation with interface for future database integration\n- **Middleware**: Custom logging, JSON parsing, and error handling\n\n### Database Architecture\n- **ORM**: Drizzle ORM configured for PostgreSQL\n- **Database**: PostgreSQL via Neon Database serverless connection\n- **Schema**: User management schema defined in shared directory\n- **Migrations**: Drizzle Kit for database schema management\n- **Current State**: Memory storage implementation as placeholder\n\n### Project Structure\n- **Monorepo Layout**: Client, server, and shared code in organized directories\n- **Shared Schema**: Common TypeScript types and Zod validation schemas\n- **Path Aliases**: Configured aliases for clean imports (@, @shared, @assets)\n- **Component Organization**: Modular React components with clear separation of concerns\n\n### Key Features\n- **Hero Carousel**: Auto-rotating image slider showcasing coffee shop atmosphere\n- **Interactive Gallery**: Grid layout with lightbox functionality for image viewing\n- **Responsive Navigation**: Mobile-friendly navigation with hamburger menu\n- **Contact Information**: Location, hours, and contact details presentation\n- **Brand Integration**: Consistent use of Iteeha Coffee branding and imagery\n\n## External Dependencies\n\n### Database & ORM\n- **Neon Database**: Serverless PostgreSQL database hosting\n- **Drizzle ORM**: Type-safe ORM with PostgreSQL dialect\n- **connect-pg-simple**: PostgreSQL session store for Express sessions\n\n### UI & Styling\n- **Radix UI**: Comprehensive set of accessible UI primitives\n- **Tailwind CSS**: Utility-first CSS framework with custom design system\n- **Lucide React**: Modern icon library\n- **shadcn/ui**: Pre-built component library based on Radix UI\n\n### Development & Build Tools\n- **Vite**: Fast build tool with React plugin and runtime error overlay\n- **TypeScript**: Type safety across the entire application\n- **esbuild**: Fast JavaScript/TypeScript bundler for production builds\n- **tsx**: TypeScript execution engine for development\n\n### State & Form Management\n- **TanStack Query**: Server state management and caching\n- **React Hook Form**: Form handling with validation\n- **Zod**: Schema validation library integrated with Drizzle\n\n### Utilities & Enhancements\n- **date-fns**: Date manipulation and formatting utilities\n- **clsx & tailwind-merge**: Conditional CSS class utilities\n- **class-variance-authority**: Type-safe CSS variant management\n- **Embla Carousel**: Carousel/slider functionality\n","size_bytes":3772},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./index.html\", \"./src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      colors: {\n        espresso: \"var(--espresso)\",\n        latte: \"var(--latte)\",\n        cream: \"var(--cream)\",\n        sage: \"var(--sage)\",\n        blush: \"var(--blush)\",\n        caramel: \"var(--caramel)\",\n        foam: \"var(--foam)\",\n        border: \"var(--latte)\", // Add border color definition\n        // Coffee theme colors for compatibility\n        'coffee-dark': '#2C1810',\n        'coffee-brown': '#4B3621',\n        'coffee-light': '#F7F4F1',\n        'coffee-gold': '#D4A574',\n        'coffee-cream': '#F0E6D3',\n        'charcoal': '#666666',\n        // Modern accent colors\n        'warm-peach': '#FFB5A7',\n        'soft-rose': '#F4C2C2',\n        'mint-green': '#96CEB4',\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        display: [\"var(--font-display)\"],\n        heading: [\"var(--font-heading)\"],\n      },\n      keyframes: {\n        bounce: {\n          \"0%, 100%\": { \n            transform: \"translateY(0) rotate(-1deg)\",\n          },\n          \"50%\": {\n            transform: \"translateY(-15px) rotate(2deg)\",\n          },\n        },\n        wiggle: {\n          \"0%, 100%\": { transform: \"rotate(-2deg)\" },\n          \"50%\": { transform: \"rotate(2deg)\" },\n        },\n        float: {\n          \"0%, 100%\": { transform: \"translateY(0px)\" },\n          \"50%\": { transform: \"translateY(-10px)\" },\n        }\n      },\n      animation: {\n        bounce: \"bounce 3s ease-in-out infinite\",\n        wiggle: \"wiggle 1s ease-in-out infinite\",\n        float: \"float 3s ease-in-out infinite\"\n      }\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":1945},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\n\nexport default defineConfig({\n  plugins: [react()],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(__dirname, \"src\"),\n    },\n  },\n  root: \".\",\n  build: {\n    outDir: \"dist\",\n    emptyOutDir: true,\n  },\n});\n","size_bytes":314},"src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/home\";\nimport About from \"@/pages/about\";\nimport Contact from \"@/pages/contact\";\nimport Menu from \"@/pages/menu\";\nimport Gallery from \"@/pages/gallery\";\nimport OrderLanding from \"@/pages/order-landing\";\nimport Order from \"@/pages/order\";\nimport Privacy from \"@/pages/privacy\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/menu\" component={Menu} />\n      <Route path=\"/gallery\" component={Gallery} />\n      <Route path=\"/order-landing\" component={OrderLanding} />\n      <Route path=\"/order\" component={Order} />\n      <Route path=\"/privacy\" component={Privacy} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1330},"src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=Playfair+Display:wght@400;500;600;700&family=Poppins:wght@300;400;500;600;700&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --espresso: hsl(25, 35%, 18%);\n  --latte: hsl(40, 70%, 92%);\n  --cream: hsl(48, 100%, 97%);\n  --sage: hsl(120, 35%, 60%);\n  --blush: hsl(350, 85%, 80%);\n  --caramel: hsl(25, 98%, 62%);\n  --foam: hsl(45, 60%, 96%);\n  \n  /* Enhanced vibrant coffee verse colors */\n  --coffee-bean: hsl(30, 45%, 25%);\n  --golden-brew: hsl(35, 85%, 65%);\n  --mocha-dream: hsl(20, 60%, 40%);\n  --steam-white: hsl(0, 0%, 98%);\n  --earth-brown: hsl(25, 50%, 30%);\n  --sunset-orange: hsl(15, 90%, 70%);\n  --forest-green: hsl(140, 40%, 55%);\n  --lavender-mist: hsl(280, 30%, 85%);\n  \n  --font-sans: 'Inter', sans-serif;\n  --font-display: 'Playfair Display', serif;\n  --font-heading: 'Poppins', sans-serif;\n  \n  --radius: 1.5rem;\n  --doodle-size: 40px;\n}\n\n.dark {\n  --espresso: hsl(25, 20%, 25%);\n  --latte: hsl(40, 15%, 30%);\n  --cream: hsl(48, 10%, 20%);\n  --sage: hsl(120, 15%, 45%);\n  --blush: hsl(350, 30%, 45%);\n  --caramel: hsl(25, 50%, 55%);\n  --foam: hsl(45, 15%, 25%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-latte text-espresso;\n    font-family: var(--font-sans);\n    background-image: \n      radial-gradient(circle at 1px 1px, var(--caramel) 1px, transparent 0),\n      radial-gradient(circle at 50px 50px, var(--golden-brew) 0.5px, transparent 0),\n      linear-gradient(45deg, transparent 49%, var(--foam) 50%, transparent 51%);\n    background-size: 24px 24px, 80px 80px, 120px 120px;\n    background-attachment: fixed;\n    overflow-x: hidden;\n  }\n\n  h1, h2, h3, h4 {\n    @apply font-display;\n  }\n\n  .doodle-bg {\n    background-image: \n      url(\"data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M20,30 Q40,15 60,30 T100,30 M10,70 Q30,55 50,70 T90,70' stroke='%23d9b38c' fill='none' stroke-width='2' opacity='0.15'/%3E%3C/svg%3E\"),\n      url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='15' cy='15' r='3' fill='%23f4a261' opacity='0.1'/%3E%3Ccircle cx='45' cy='45' r='2' fill='%23e76f51' opacity='0.1'/%3E%3C/svg%3E\");\n    background-size: var(--doodle-size) var(--doodle-size), 60px 60px;\n    position: relative;\n  }\n  \n  .doodle-bg::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(45deg, transparent 30%, var(--foam) 50%, transparent 70%);\n    opacity: 0.3;\n    pointer-events: none;\n  }\n}\n\n@layer components {\n  .btn-primary {\n    @apply bg-caramel text-white px-6 py-3 rounded-full font-medium transition-all duration-300 hover:scale-105 hover:shadow-lg;\n    background: linear-gradient(135deg, var(--caramel) 0%, var(--golden-brew) 100%);\n    box-shadow: 0 4px 15px rgba(244, 162, 97, 0.3);\n    position: relative;\n    overflow: hidden;\n  }\n  \n  .btn-primary::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n    transition: left 0.5s;\n  }\n  \n  .btn-primary:hover::before {\n    left: 100%;\n  }\n  \n  .btn-primary:hover {\n    background: linear-gradient(135deg, var(--golden-brew) 0%, var(--sunset-orange) 100%);\n    transform: scale(1.05) translateY(-2px);\n    box-shadow: 0 8px 25px rgba(244, 162, 97, 0.5);\n  }\n  \n  .btn-secondary {\n    @apply bg-sage text-white px-6 py-3 rounded-full font-medium hover:bg-espresso transition-all duration-300 hover:scale-105;\n  }\n  \n  .coffee-card {\n    @apply bg-foam rounded-2xl p-6 shadow-lg border-2 border-latte transition-all duration-500 hover:shadow-2xl hover:-translate-y-2 hover:rotate-1;\n    background: linear-gradient(135deg, var(--foam) 0%, var(--cream) 100%);\n    backdrop-filter: blur(10px);\n  }\n  \n  .coffee-card:hover {\n    border-color: var(--caramel);\n    box-shadow: 0 20px 40px rgba(244, 162, 97, 0.3), 0 0 0 1px rgba(244, 162, 97, 0.2);\n  }\n  \n  .wavy-divider {\n    @apply w-full h-12 bg-no-repeat bg-center;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1440 120'%3E%3Cpath fill='%23f5f0e6' fill-opacity='1' d='M0,64L80,69.3C160,75,320,85,480,80C640,75,800,53,960,48C1120,43,1280,53,1360,58.7L1440,64L1440,0L1360,0C1280,0,1120,0,960,0C800,0,640,0,480,0C320,0,160,0,80,0L0,0Z'%3E%3C/path%3E%3C/svg%3E\");\n  }\n  \n  .doodle-icon {\n    @apply w-12 h-12 p-2 bg-blush rounded-full flex items-center justify-center transition-all duration-300;\n    background: linear-gradient(135deg, var(--blush), var(--lavender-mist));\n    box-shadow: 0 4px 15px rgba(244, 162, 97, 0.2);\n  }\n  \n  .doodle-icon:hover {\n    transform: scale(1.1) rotate(10deg);\n    box-shadow: 0 8px 25px rgba(244, 162, 97, 0.4);\n    background: linear-gradient(135deg, var(--caramel), var(--golden-brew));\n  }\n}\n\n@layer utilities {\n  .text-shadow {\n    text-shadow: 2px 2px 4px rgba(0,0,0,0.1);\n  }\n  \n  .coffee-stain {\n    position: relative;\n    &::after {\n      content: \"\";\n      @apply absolute bottom-0 right-0 w-24 h-24 bg-no-repeat bg-contain opacity-10;\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Cpath fill='%234B3621' d='M30,10 Q50,30 70,10 Q90,40 70,70 Q50,90 30,70 Q10,40 30,10 Z'/%3E%3C/svg%3E\");\n    }\n  }\n  \n  .bounce {\n    animation: bounce 3s ease-in-out infinite;\n  }\n  \n  .wiggle {\n    animation: wiggle 1s ease-in-out infinite;\n  }\n}\n\n@keyframes bounce {\n  0%, 100% { \n    transform: translateY(0) rotate(-1deg);\n  }\n  50% {\n    transform: translateY(-15px) rotate(2deg);\n  }\n}\n\n@keyframes wiggle {\n  0%, 100% { transform: rotate(-2deg); }\n  50% { transform: rotate(2deg); }\n}\n\n@keyframes float {\n  0%, 100% {\n    transform: translateY(0px);\n  }\n  50% {\n    transform: translateY(-10px);\n  }\n}\n\n@keyframes pulse-glow {\n  0%, 100% {\n    box-shadow: 0 0 20px rgba(244, 162, 97, 0.4);\n  }\n  50% {\n    box-shadow: 0 0 40px rgba(244, 162, 97, 0.8), 0 0 60px rgba(244, 162, 97, 0.4);\n  }\n}\n\n@keyframes coffee-beans {\n  0% {\n    transform: translateY(-100vh) rotate(0deg);\n    opacity: 0;\n  }\n  10% {\n    opacity: 1;\n  }\n  90% {\n    opacity: 1;\n  }\n  100% {\n    transform: translateY(100vh) rotate(360deg);\n    opacity: 0;\n  }\n}\n\n@keyframes steam-rise {\n  0% {\n    transform: translateY(0) scale(1) rotate(0deg);\n    opacity: 0.7;\n  }\n  50% {\n    transform: translateY(-30px) scale(1.2) rotate(5deg);\n    opacity: 0.4;\n  }\n  100% {\n    transform: translateY(-60px) scale(1.5) rotate(-3deg);\n    opacity: 0;\n  }\n}\n\n@keyframes text-shimmer {\n  0% {\n    background-position: -200% center;\n  }\n  100% {\n    background-position: 200% center;\n  }\n}\n\n@keyframes card-hover {\n  0% {\n    transform: translateY(0) rotate(0deg);\n  }\n  100% {\n    transform: translateY(-8px) rotate(1deg);\n  }\n}\n\n.animate-float {\n  animation: float 3s ease-in-out infinite;\n}\n\n.animate-pulse-glow {\n  animation: pulse-glow 2s ease-in-out infinite;\n}\n\n.animate-coffee-beans {\n  animation: coffee-beans 8s linear infinite;\n}\n\n.animate-steam {\n  animation: steam-rise 3s ease-out infinite;\n}\n\n.animate-shimmer {\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);\n  background-size: 200% 100%;\n  animation: text-shimmer 3s ease-in-out infinite;\n  -webkit-background-clip: text;\n  background-clip: text;\n}\n\n.card-hover-effect {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.card-hover-effect:hover {\n  animation: card-hover 0.3s ease-out forwards;\n}\n\n/* Coffee verse special effects */\n.coffee-beans-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 1;\n  overflow: hidden;\n}\n\n.falling-bean {\n  position: absolute;\n  width: 8px;\n  height: 12px;\n  background: var(--coffee-bean);\n  border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;\n  opacity: 0.6;\n}\n\n.steam-effect {\n  position: absolute;\n  width: 4px;\n  height: 4px;\n  background: rgba(255, 255, 255, 0.7);\n  border-radius: 50%;\n  filter: blur(1px);\n}\n\n.parallax-section {\n  transform-style: preserve-3d;\n  transition: transform 0.1s ease-out;\n}\n\n.easter-egg {\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.easter-egg:hover {\n  transform: scale(1.1) rotate(5deg);\n  filter: hue-rotate(180deg);\n}\n\n.text-gradient {\n  background: linear-gradient(135deg, var(--caramel), var(--golden-brew), var(--sunset-orange));\n  background-size: 200% 200%;\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n  animation: gradient-shift 4s ease-in-out infinite;\n}\n\n@keyframes gradient-shift {\n  0%, 100% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.smooth-scroll {\n  scroll-behavior: smooth;\n}\n\n/* Interactive menu item effects */\n.menu-item-hover {\n  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  position: relative;\n  overflow: hidden;\n}\n\n.menu-item-hover::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(244, 162, 97, 0.1), transparent);\n  transition: left 0.6s ease;\n}\n\n.menu-item-hover:hover::before {\n  left: 100%;\n}\n\n.menu-item-hover:hover {\n  transform: translateY(-5px) scale(1.02);\n  box-shadow: 0 15px 35px rgba(244, 162, 97, 0.2);\n}\n\n/* Coffee cup steam animation */\n.coffee-steam {\n  position: relative;\n}\n\n.coffee-steam::after {\n  content: '☁️';\n  position: absolute;\n  top: -10px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 12px;\n  opacity: 0.6;\n  animation: steam-rise 2s ease-in-out infinite;\n}\n\n/* Magical sparkles */\n@keyframes sparkle {\n  0%, 100% {\n    opacity: 0;\n    transform: scale(0.5) rotate(0deg);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(1) rotate(180deg);\n  }\n}\n\n.sparkle {\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  background: radial-gradient(circle, var(--golden-brew), transparent);\n  border-radius: 50%;\n  animation: sparkle 2s ease-in-out infinite;\n}\n\n.sparkle:nth-child(2) {\n  animation-delay: 0.5s;\n}\n\n.sparkle:nth-child(3) {\n  animation-delay: 1s;\n}\n\n.sparkle:nth-child(4) {\n  animation-delay: 1.5s;\n}\n\n/* Enhanced immersive effects */\n@keyframes magical-particle {\n  0% {\n    transform: translateY(0) scale(0) rotate(0deg);\n    opacity: 0;\n  }\n  20% {\n    opacity: 1;\n    transform: translateY(-20px) scale(1) rotate(90deg);\n  }\n  80% {\n    opacity: 1;\n    transform: translateY(-100px) scale(1.2) rotate(270deg);\n  }\n  100% {\n    transform: translateY(-150px) scale(0) rotate(360deg);\n    opacity: 0;\n  }\n}\n\n@keyframes coffee-verse-glow {\n  0%, 100% {\n    box-shadow: 0 0 20px rgba(244, 162, 97, 0.3), inset 0 0 20px rgba(244, 162, 97, 0.1);\n  }\n  50% {\n    box-shadow: 0 0 40px rgba(244, 162, 97, 0.6), inset 0 0 30px rgba(244, 162, 97, 0.2);\n  }\n}\n\n.magical-hover {\n  position: relative;\n  overflow: hidden;\n  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n}\n\n.magical-hover::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 0;\n  height: 0;\n  background: radial-gradient(circle, rgba(244, 162, 97, 0.3) 0%, transparent 70%);\n  transition: all 0.4s ease;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n}\n\n.magical-hover:hover::before {\n  width: 200%;\n  height: 200%;\n}\n\n.magical-hover:hover {\n  transform: scale(1.05) rotate(2deg);\n  animation: coffee-verse-glow 2s ease-in-out infinite;\n}\n\n.coffee-particle {\n  position: absolute;\n  width: 4px;\n  height: 4px;\n  background: var(--golden-brew);\n  border-radius: 50%;\n  animation: magical-particle 4s ease-in-out infinite;\n}\n\n.immersive-background {\n  background: linear-gradient(135deg, \n    var(--cream) 0%, \n    var(--foam) 25%, \n    var(--latte) 50%, \n    var(--foam) 75%, \n    var(--cream) 100%);\n  background-size: 400% 400%;\n  animation: gradient-shift 15s ease infinite;\n}\n\n.playful-text {\n  transition: all 0.3s ease;\n  cursor: pointer;\n}\n\n.playful-text:hover {\n  transform: scale(1.1) rotate(-2deg);\n  color: var(--caramel);\n  text-shadow: 0 0 10px rgba(244, 162, 97, 0.5);\n}\n\n.animate-wiggle {\n  animation: wiggle 2s ease-in-out infinite;\n}\n","size_bytes":12334},"src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"src/components/ContactSection.tsx":{"content":"export default function ContactSection() {\n  return (\n    <section id=\"contact\" className=\"py-24 bg-cream coffee-texture relative overflow-hidden\" data-testid=\"contact-section\">\n      <div className=\"absolute inset-0 hero-gradient opacity-30\"></div>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative\">\n        <div className=\"text-center mb-20\">\n          <h2 \n            className=\"font-display font-bold text-5xl md:text-6xl bg-gradient-to-r from-warm-peach to-soft-rose bg-clip-text text-transparent mb-6 animate-fade-in\" \n            data-testid=\"contact-title\"\n          >\n            Visit Us\n          </h2>\n          <p \n            className=\"font-sans text-xl text-coffee-dark/80 max-w-2xl mx-auto animate-slide-up\" \n            data-testid=\"contact-subtitle\"\n          >\n            Come experience the warmth of Iteeha Coffee. We're here to serve you the perfect cup.\n          </p>\n        </div>\n        \n        <div className=\"grid lg:grid-cols-3 gap-16\">\n          {/* Location */}\n          <div \n            className=\"text-center group transform hover:scale-105 transition-all duration-300\" \n            data-testid=\"contact-location\"\n          >\n            <div className=\"bg-warm-peach text-white w-20 h-20 rounded-3xl rotate-12 group-hover:rotate-0 flex items-center justify-center mx-auto mb-8 transition-all duration-500 shadow-lg hover:shadow-xl hover:shadow-warm-peach/20\">\n              <svg className=\"w-10 h-10\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n              </svg>\n            </div>\n            <h3 className=\"font-display font-bold text-2xl text-coffee-dark mb-4\">Locations</h3>\n            <p className=\"font-sans text-lg text-coffee-dark/80\">\n              Mahalaxmi • Lower Parel • Bandra West<br />\n              <a href=\"/contact\" className=\"inline-flex items-center text-warm-peach hover:text-soft-rose transition-colors mt-2 group-hover:translate-x-2 transition-transform duration-300\">\n                View all locations\n                <svg className=\"w-5 h-5 ml-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n              </a>\n            </p>\n          </div>\n          \n          {/* Hours */}\n          <div \n            className=\"text-center group transform hover:scale-105 transition-all duration-300\" \n            data-testid=\"contact-hours\"\n          >\n            <div className=\"bg-mint-green text-white w-20 h-20 rounded-3xl -rotate-12 group-hover:rotate-0 flex items-center justify-center mx-auto mb-8 transition-all duration-500 shadow-lg hover:shadow-xl hover:shadow-mint-green/20\">\n              <svg className=\"w-10 h-10\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                <polyline points=\"12,6 12,12 16,14\" />\n              </svg>\n            </div>\n            <h3 className=\"font-display font-bold text-2xl text-coffee-dark mb-4\">Hours</h3>\n            <p className=\"font-sans text-lg text-coffee-dark/80\">\n              7:30 AM - 11:30 PM<br />\n              All Days<br />\n              <span className=\"font-display text-mint-green mt-2 block\">Basic but Beautiful</span>\n            </p>\n          </div>\n          \n          {/* Contact */}\n          <div \n            className=\"text-center group transform hover:scale-105 transition-all duration-300\" \n            data-testid=\"contact-info\"\n          >\n            <div className=\"bg-soft-rose text-white w-20 h-20 rounded-3xl rotate-12 group-hover:rotate-0 flex items-center justify-center mx-auto mb-8 transition-all duration-500 shadow-lg hover:shadow-xl hover:shadow-soft-rose/20\">\n              <svg className=\"w-10 h-10\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n              </svg>\n            </div>\n            <h3 className=\"font-display font-bold text-2xl text-coffee-dark mb-4\">Contact</h3>\n            <p className=\"font-sans text-lg text-coffee-dark/80\">\n              connect@iteeha.coffee<br />\n              <a href=\"/contact\" className=\"inline-flex items-center text-soft-rose hover:text-warm-peach transition-colors mt-2 group-hover:translate-x-2 transition-transform duration-300\">\n                Send us a message\n                <svg className=\"w-5 h-5 ml-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n              </a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5259},"src/components/Footer.tsx":{"content":"export default function Footer() {\n  return (\n    <footer className=\"bg-espresso py-16 relative overflow-hidden immersive-background\" data-testid=\"footer\">\n      {/* Magical Background Effects */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-espresso via-coffee-bean to-mocha-dream opacity-90\"></div>\n      <div className=\"absolute top-10 left-10 text-6xl opacity-10 animate-float\">☕</div>\n      <div className=\"absolute bottom-20 right-20 text-4xl opacity-20 animate-bounce\">✨</div>\n      \n      {/* Coffee Particles */}\n      <div className=\"coffee-particle\" style={{top: '20%', left: '10%', animationDelay: '0s'}}></div>\n      <div className=\"coffee-particle\" style={{top: '60%', right: '15%', animationDelay: '2s'}}></div>\n      <div className=\"coffee-particle\" style={{bottom: '30%', left: '70%', animationDelay: '4s'}}></div>\n      \n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n        <div className=\"grid md:grid-cols-4 gap-12\">\n          \n          {/* ABOUT US */}\n          <div className=\"md:col-span-1\" data-testid=\"footer-about\">\n            <h4 className=\"font-display font-bold text-xl text-gradient mb-6 playful-text\">ABOUT US</h4>\n            <p className=\"font-sans text-white/80 mb-6 text-sm leading-relaxed\">\n              \"Iteeha\" roughly translates to 'as per tradition', and keeping that in mind, we \n              adopted the virtue of doing 'Basic but Beautiful'. We offer light and simple \n              products, but beautifully done.\n            </p>\n            \n            {/* Social Media Icons */}\n            <div className=\"flex space-x-4 mt-6\" data-testid=\"footer-social\">\n              <a href=\"#\" className=\"text-white/60 hover:text-caramel transform hover:scale-125 hover:rotate-12 transition-all duration-300 magical-hover\" data-testid=\"social-facebook\">\n                <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>\n                </svg>\n              </a>\n              <a href=\"https://www.instagram.com/iteeha.coffee/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-white/60 hover:text-golden-brew transform hover:scale-125 hover:rotate-12 transition-all duration-300 magical-hover\" data-testid=\"social-instagram\">\n                <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 6.62 5.367 11.987 11.988 11.987c6.62 0 11.987-5.367 11.987-11.987C24.014 5.367 18.637.001 12.017.001zM8.448 16.988c-1.297 0-2.448-1.207-2.448-2.448s1.151-2.448 2.448-2.448c1.297 0 2.448 1.207 2.448 2.448s-1.151 2.448-2.448 2.448z\"/>\n                </svg>\n              </a>\n              <a href=\"#\" className=\"text-white/60 hover:text-forest-green transform hover:scale-125 hover:rotate-12 transition-all duration-300 magical-hover\" data-testid=\"social-whatsapp\">\n                <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488\"/>\n                </svg>\n              </a>\n            </div>\n          </div>\n\n          {/* LINKS */}\n          <div data-testid=\"footer-links\">\n            <h4 className=\"font-display font-bold text-xl text-gradient mb-6 playful-text\">LINKS</h4>\n            <ul className=\"space-y-3\">\n              <li>\n                <a href=\"/terms\" className=\"font-sans text-white/80 hover:text-caramel transition-all duration-300 transform hover:translate-x-2 inline-flex items-center group text-sm\" data-testid=\"footer-link-terms\">\n                  <span className=\"transform group-hover:scale-110 transition-transform duration-300\">Terms and Conditions</span>\n                </a>\n              </li>\n              <li>\n                <a href=\"/privacy\" className=\"font-sans text-white/80 hover:text-caramel transition-all duration-300 transform hover:translate-x-2 inline-flex items-center group text-sm\" data-testid=\"footer-link-privacy\">\n                  <span className=\"transform group-hover:scale-110 transition-transform duration-300\">Privacy Policy</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          {/* OPENING HOURS */}\n          <div data-testid=\"footer-hours\">\n            <h4 className=\"font-display font-bold text-xl text-gradient mb-6 playful-text\">OPENING HOURS</h4>\n            <div className=\"space-y-4 text-sm\">\n              <div className=\"magical-hover p-3 rounded-lg\">\n                <p className=\"text-golden-brew font-medium\">VFS Mahalaxmi:</p>\n                <p className=\"text-white/80\">7:30 AM to 11:30 PM</p>\n                <p className=\"text-white/60 text-xs\">(open everyday)</p>\n              </div>\n              <div className=\"magical-hover p-3 rounded-lg\">\n                <p className=\"text-golden-brew font-medium\">Urmi:</p>\n                <p className=\"text-white/80\">Monday to Friday: 8:00 AM to 10 PM</p>\n                <p className=\"text-white/80\">Saturday: 10am to 7:30pm</p>\n                <p className=\"text-white/60 text-xs\">(closed on Sundays)</p>\n              </div>\n            </div>\n          </div>\n\n          {/* CONTACT INFORMATION */}\n          <div data-testid=\"footer-contact\">\n            <h4 className=\"font-display font-bold text-xl text-gradient mb-6 playful-text\">CONTACT INFORMATION</h4>\n            <div className=\"space-y-4 text-sm\">\n              <div className=\"magical-hover p-3 rounded-lg\">\n                <p className=\"text-golden-brew font-medium mb-2\">Official Address:</p>\n                <p className=\"text-white/80 leading-relaxed\">\n                  11th Floor, Urmi Estate, Nagin Nagar,<br/>\n                  Ganapatro Kadam Marg, Opp. Peninsula<br/>\n                  Business Park,<br/>\n                  Lower Parel, Mumbai, Maharashtra<br/>\n                  400013\n                </p>\n              </div>\n              <div className=\"magical-hover p-3 rounded-lg\">\n                <p className=\"text-white/80\">📞 +91 9819820205</p>\n                <p className=\"text-white/80\">✉️ connect@iteeha.coffee</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Copyright Section */}\n        <div className=\"border-t border-white/20 mt-12 pt-8 text-center\" data-testid=\"footer-copyright\">\n          <div className=\"space-y-2\">\n            <p className=\"font-sans text-white/80 text-sm\">\n              All Rights Reserved. © 2023 & 2024 Iteeha coffee\n            </p>\n            <p className=\"font-sans text-white/60 text-xs\">\n              Iteeha Hospitality & Entertainment Pvt Ltd GST - 27AAHCI3079B1ZO\n            </p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":8060},"src/components/GalleryGrid.tsx":{"content":"import { useState } from \"react\";\nimport { galleryImages } from \"@/lib/gallery-data\";\n\ninterface GalleryGridProps {\n  onImageClick?: (imageSrc: string) => void;\n}\n\nexport default function GalleryGrid({ onImageClick }: GalleryGridProps) {\n  const handleImageClick = (imageSrc: string) => {\n    if (onImageClick) {\n      onImageClick(imageSrc);\n    }\n  };\n\n  return (\n    <section id=\"gallery\" className=\"py-24 bg-cream coffee-texture relative overflow-hidden\" data-testid=\"gallery-section\">\n      <div className=\"absolute inset-0 hero-gradient opacity-40\"></div>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative\">\n        <div className=\"text-center mb-20\">\n          <h2 \n            className=\"font-display font-bold text-5xl md:text-6xl bg-gradient-to-r from-warm-peach to-soft-rose bg-clip-text text-transparent mb-6 animate-fade-in drop-shadow-lg\" \n            data-testid=\"gallery-title\"\n          >\n            Capture the Moments\n          </h2>\n          <p \n            className=\"font-sans text-xl text-coffee-dark/80 max-w-2xl mx-auto animate-slide-up text-shadow-sm\" \n            data-testid=\"gallery-subtitle\"\n          >\n            Step into our world where every cup tells a story and every corner holds a memory\n          </p>\n        </div>\n        \n        {/* Gallery Grid */}\n        <div \n          className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8\" \n          data-testid=\"gallery-grid\"\n        >\n          {galleryImages.map((image, index) => (\n            <div\n              key={index}\n              className={`group gallery-item overflow-hidden rounded-3xl cursor-pointer transform transition-all duration-500 hover:scale-105 hover:rotate-1 hover:shadow-2xl hover:shadow-warm-peach/20 ${image.aspectRatio}`}\n              onClick={() => handleImageClick(image.src)}\n              data-testid={`gallery-item-${index}`}\n            >\n              <div className=\"relative w-full h-full overflow-hidden\">\n                <img \n                  src={image.src} \n                  alt={image.alt} \n                  className=\"w-full h-full object-cover transform transition-transform duration-700 group-hover:scale-110\"\n                  loading=\"lazy\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-coffee-dark/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end p-6\">\n                  <p className=\"text-white font-display text-lg transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300\">\n                    {image.alt}\n                  </p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2768},"src/components/HeroCarousel.tsx":{"content":"import { useHeroSlider } from \"@/hooks/use-hero-slider\";\n\nexport default function HeroCarousel() {\n  const { currentSlide, setCurrentSlide } = useHeroSlider();\n\n  const slides = [\n    {\n      id: 0,\n      image: \"https://iteeha.coffee/images/vfx.png\",\n      title: \"Coffee. Craft. Conversations.\",\n      subtitle: \"Where every sip tells a story\",\n      isLogo: true,\n    },\n    {\n      id: 1,\n      image: \"https://iteeha.coffee/images/urmi.jpg\",\n      title: \"Step in, relax,\",\n      subtitle: \"Your cozy corner awaits\",\n      isLogo: false,\n    },\n    {\n      id: 2,\n      image: \"https://iteeha.coffee/images/e6.jpg\",\n      title: \"And\",\n      subtitle: \"Take a moment to breathe\",\n      isLogo: false,\n    },\n    {\n      id: 3,\n      image: \"https://iteeha.coffee/images/e2.jpg\",\n      title: \"let us take care of the rest.\",\n      subtitle: \"Your perfect brew awaits\",\n      isLogo: false,\n    },\n  ];\n\n  return (\n    <section\n      id=\"home\"\n      className=\"relative min-h-screen flex items-center coffee-texture overflow-hidden\"\n      data-testid=\"hero-carousel\"\n    >\n      <div className=\"absolute inset-0 hero-gradient opacity-50\"></div>\n\n      {/* Hero Slides */}\n      <div className=\"w-full h-screen relative overflow-hidden\">\n        {slides.map((slide, index) => (\n          <div\n            key={slide.id}\n            className={`absolute inset-0 flex items-center transition-all duration-1000 ${\n              currentSlide === index\n                ? \"opacity-100 scale-100\"\n                : \"opacity-0 scale-105\"\n            }`}\n            data-testid={`hero-slide-${index}`}\n          >\n            <div\n              className=\"absolute inset-0 bg-cover bg-center bg-no-repeat transition-transform duration-10000 hover:scale-105\"\n              style={{ backgroundImage: `url('${slide.image}')` }}\n            />\n            <div className=\"absolute inset-0 bg-black/30\" />\n            <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              {slide.isLogo ? (\n                <div className=\"flex flex-col items-center space-y-6\">\n                  <img\n                    src={slide.image}\n                    alt=\"Iteeha Coffee Logo\"\n                    className=\"h-32 md:h-48 w-auto animate-bounce\"\n                  />\n                  <h1 className=\"font-display font-bold text-5xl md:text-7xl text-white mb-4 animate-fade-in\">\n                    {slide.title}\n                  </h1>\n                  <p className=\"font-sans text-xl md:text-2xl text-mint-green/90 animate-slide-up\">\n                    {slide.subtitle}\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-6\">\n                  <h1 className=\"font-display font-bold text-5xl md:text-7xl text-white mb-4 animate-fade-in\">\n                    {slide.title}\n                  </h1>\n                  <p className=\"font-sans text-xl md:text-2xl text-mint-green/90 animate-slide-up\">\n                    {slide.subtitle}\n                  </p>\n                </div>\n              )}\n              <a\n                href=\"/order-landing\"\n                className=\"inline-block mt-8 bg-warm-peach text-white px-10 py-5 rounded-full font-display font-semibold text-xl hover:bg-soft-rose transition-all duration-300 transform hover:scale-110 hover:shadow-xl hover:shadow-warm-peach/20 animate-float\"\n                data-testid=\"hero-order-button\"\n              >\n                Order Now\n              </a>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Hero Navigation Dots */}\n      <div\n        className=\"absolute bottom-12 left-1/2 transform -translate-x-1/2 flex space-x-4\"\n        data-testid=\"hero-dots\"\n      >\n        {slides.map((_, index) => (\n          <button\n            key={index}\n            onClick={() => setCurrentSlide(index)}\n            className={`w-4 h-4 rounded-full transition-all duration-300 ${\n              currentSlide === index\n                ? \"bg-warm-peach scale-125\"\n                : \"bg-white/50 hover:bg-warm-peach/75 hover:scale-110\"\n            }`}\n            data-testid={`hero-dot-${index}`}\n          />\n        ))}\n      </div>\n    </section>\n  );\n}\n","size_bytes":4209},"src/components/MenuPreview.tsx":{"content":"export default function MenuPreview() {\n  const featuredItems = [\n    {\n      category: \"Coffee\",\n      name: \"House Cold Coffee\",\n      price: \"₹250\",\n      description: \"Our signature cold coffee blend - perfect for Mumbai weather\",\n      image: \"https://picsum.photos/400/300?random=1\"\n    },\n    {\n      category: \"Food\", \n      name: \"Classic Spiced Chicken Sandwich\",\n      price: \"₹330\",\n      description: \"Tender spiced chicken with fresh vegetables on artisan bread\",\n      image: \"https://picsum.photos/400/300?random=2\"\n    },\n    {\n      category: \"Tea\",\n      name: \"Black Tea Orange Blossom\", \n      price: \"₹160\",\n      description: \"Premium black tea infused with delicate orange blossom notes\",\n      image: \"https://picsum.photos/400/300?random=3\"\n    },\n    {\n      category: \"Dessert\",\n      name: \"Caramel & Chocolate Croissant\",\n      price: \"₹520\", \n      description: \"Buttery croissant filled with rich caramel and chocolate\",\n      image: \"https://picsum.photos/400/300?random=4\"\n    }\n  ];\n\n  return (\n    <section className=\"py-24 bg-cream coffee-texture relative overflow-hidden\" data-testid=\"menu-preview\">\n      <div className=\"absolute inset-0 hero-gradient opacity-50\"></div>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative\">\n        <div className=\"text-center mb-20\">\n          <h2 className=\"font-display font-bold text-5xl md:text-6xl bg-gradient-to-r from-warm-peach to-soft-rose bg-clip-text text-transparent mb-6 animate-fade-in drop-shadow-lg\" data-testid=\"menu-preview-title\">\n            Taste the Magic\n          </h2>\n          <p className=\"font-sans text-xl text-coffee-dark/80 max-w-2xl mx-auto mb-12 animate-slide-up text-shadow-sm\" data-testid=\"menu-preview-subtitle\">\n            Discover our carefully crafted selection of drinks and delights - where every bite and sip tells a story\n          </p>\n          <div className=\"flex justify-center items-center space-x-12 text-coffee-dark\">\n            <div className=\"text-center transform hover:scale-110 transition-transform duration-300 cursor-pointer\">\n              <div className=\"text-3xl font-bold font-display bg-gradient-to-r from-warm-peach to-soft-rose bg-clip-text text-transparent drop-shadow-md\">₹500-1050</div>\n              <div className=\"text-base mt-2 font-medium\">Cost for Two</div>\n            </div>\n            <div className=\"w-px h-16 bg-mint-green/30\"></div>\n            <div className=\"text-center transform hover:scale-110 transition-transform duration-300 cursor-pointer\">\n              <div className=\"text-3xl font-bold font-display bg-gradient-to-r from-warm-peach to-soft-rose bg-clip-text text-transparent drop-shadow-md\">7:30 AM - 11:30 PM</div>\n              <div className=\"text-base mt-2 font-medium\">All Days</div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8 mb-16\">\n          {featuredItems.map((item, index) => (\n            <div \n              key={index} \n              className=\"group bg-white rounded-3xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-500 hover:scale-105 hover:-rotate-1\" \n              data-testid={`menu-preview-item-${index}`}\n            >\n              <div \n                className=\"h-56 bg-cover bg-center transform transition-transform duration-700 group-hover:scale-110 group-hover:rotate-2 relative overflow-hidden rounded-t-3xl\" \n                style={{ backgroundImage: `url('${item.image}')` }} \n              >\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500\"></div>\n              </div>\n              <div className=\"p-8\">\n                <div className=\"flex justify-between items-start mb-4\">\n                  <div>\n                    <span className=\"text-sm font-bold text-mint-green uppercase tracking-wider text-shadow-sm\">{item.category}</span>\n                    <h3 className=\"font-display font-semibold text-xl text-coffee-dark mt-2 leading-tight group-hover:text-soft-rose transition-colors duration-300\">\n                      {item.name}\n                    </h3>\n                  </div>\n                  <span className=\"text-2xl font-bold font-display text-warm-peach flex-shrink-0 ml-2 group-hover:scale-110 transition-transform duration-300 drop-shadow-md\">\n                    {item.price}\n                  </span>\n                </div>\n                <p className=\"text-coffee-dark/70 text-base leading-relaxed\">\n                  {item.description}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"text-center\">\n          <a \n            href=\"/menu\" \n            className=\"inline-flex items-center bg-warm-peach text-white px-10 py-5 rounded-full font-display font-semibold text-xl hover:bg-soft-rose transition-all duration-300 transform hover:scale-110 hover:shadow-xl hover:shadow-warm-peach/20 group animate-bounce-slow\"\n            data-testid=\"menu-preview-view-all\"\n          >\n            View Full Menu\n            <svg \n              className=\"w-6 h-6 ml-3 transform transition-transform duration-300 group-hover:translate-x-2\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              viewBox=\"0 0 24 24\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n            </svg>\n          </a>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5570},"src/components/Navigation.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { Menu, Coffee, Bean, Croissant, Leaf } from \"lucide-react\";\n\nexport default function Navigation() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrolled(window.scrollY > 50);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  return (\n    <nav className={`fixed top-0 w-full backdrop-blur-md z-50 transition-all duration-300 ${\n      scrolled \n        ? 'bg-cream/95 shadow-lg border-b border-caramel/20' \n        : 'bg-cream/80 shadow-md'\n    }`}>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-20\">\n          <div className=\"flex-shrink-0 flex items-center group\">\n            <div className=\"doodle-icon mr-3 bounce hover:animate-pulse-glow cursor-pointer coffee-steam\" onClick={() => alert('☕ Welcome to Iteeha Coffee Verse! ✨')}>\n              <Coffee className=\"text-espresso w-6 h-6 group-hover:animate-spin\" />\n            </div>\n            <span className=\"font-display font-bold text-3xl text-gradient hover:animate-shimmer cursor-pointer transition-all duration-300\" \n                  style={{ textShadow: \"2px 2px 0px rgba(155, 109, 80, 0.2)\" }}>\n              Iteeha\n            </span>\n          </div>\n          \n          {/* Desktop Navigation */}\n          <div className=\"hidden md:block\">\n            <div className=\"ml-10 flex items-baseline space-x-8\">\n              <a \n                href=\"/\"\n                className=\"font-heading font-medium text-espresso hover:text-caramel transition-all duration-300 hover:-translate-y-0.5 flex items-center group\"\n              >\n                <Bean className=\"mr-1 w-4 h-4 group-hover:animate-bounce\" /> Home\n              </a>\n              <a \n                href=\"/about\"\n                className=\"font-heading font-medium text-espresso hover:text-caramel transition-all duration-300 hover:-translate-y-0.5 flex items-center group\"\n              >\n                <Leaf className=\"mr-1 w-4 h-4 group-hover:animate-wiggle\" /> About\n              </a>\n              <a \n                href=\"/menu\"\n                className=\"font-heading font-medium text-espresso hover:text-caramel transition-all duration-300 hover:-translate-y-0.5 flex items-center group\"\n              >\n                <Croissant className=\"mr-1 w-4 h-4 group-hover:animate-spin\" /> Menu\n              </a>\n              <a \n                href=\"/gallery\"\n                className=\"font-heading font-medium text-espresso hover:text-caramel transition-all duration-300 hover:-translate-y-0.5 flex items-center\"\n              >\n                <svg className=\"mr-1 w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M4 4h7V2H4c-1.1 0-2 .9-2 2v7h2V4zm6 9l-4 5h12l-3-4-2.03 2.71L10 13zm7-4.5c0-.83-.67-1.5-1.5-1.5S14 7.67 14 8.5s.67 1.5 1.5 1.5S17 9.33 17 8.5zM20 2h-7v2h7v7h2V4c0-1.1-.9-2-2-2zm0 18h-7v2h7c1.1 0 2-.9 2-2v-7h-2v7zM4 13H2v7c0 1.1.9 2 2 2h7v-2H4v-7z\"/>\n                </svg>\n                Gallery\n              </a>\n              <a \n                href=\"/contact\"\n                className=\"font-heading font-medium text-espresso hover:text-caramel transition-all duration-300 hover:-translate-y-0.5 flex items-center\"\n              >\n                <svg className=\"mr-1 w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"/>\n                </svg>\n                Contact\n              </a>\n              <a \n                href=\"/order-landing\" \n                className=\"btn-primary flex items-center group coffee-steam\"\n              >\n                <Coffee className=\"mr-2 w-4 h-4 group-hover:animate-spin\" /> Order Now\n              </a>\n            </div>\n          </div>\n          \n          {/* Mobile menu button */}\n          <div className=\"md:hidden\">\n            <Sheet open={isOpen} onOpenChange={setIsOpen}>\n              <SheetTrigger asChild>\n                <Button variant=\"ghost\" size=\"icon\">\n                  <Menu className=\"h-6 w-6 text-espresso hover:text-caramel transition-colors duration-300\" />\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-[300px] bg-cream border-sage\">\n                <div className=\"flex flex-col space-y-4 mt-8\">\n                  <a \n                    href=\"/\"\n                    className=\"text-left px-3 py-2 text-espresso hover:text-caramel font-heading text-lg transition-all duration-300 hover:translate-x-2 flex items-center\"\n                    onClick={() => setIsOpen(false)}\n                  >\n                    <Bean className=\"mr-2 w-4 h-4\" /> Home\n                  </a>\n                  <a \n                    href=\"/about\"\n                    className=\"text-left px-3 py-2 text-espresso hover:text-caramel font-heading text-lg transition-all duration-300 hover:translate-x-2 flex items-center\"\n                    onClick={() => setIsOpen(false)}\n                  >\n                    <Leaf className=\"mr-2 w-4 h-4\" /> About\n                  </a>\n                  <a \n                    href=\"/menu\"\n                    className=\"text-left px-3 py-2 text-espresso hover:text-caramel font-heading text-lg transition-all duration-300 hover:translate-x-2 flex items-center\"\n                    onClick={() => setIsOpen(false)}\n                  >\n                    <Croissant className=\"mr-2 w-4 h-4\" /> Menu\n                  </a>\n                  <a \n                    href=\"/gallery\"\n                    className=\"text-left px-3 py-2 text-espresso hover:text-caramel font-heading text-lg transition-all duration-300 hover:translate-x-2 flex items-center\"\n                    onClick={() => setIsOpen(false)}\n                  >\n                    <svg className=\"mr-2 w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M4 4h7V2H4c-1.1 0-2 .9-2 2v7h2V4zm6 9l-4 5h12l-3-4-2.03 2.71L10 13zm7-4.5c0-.83-.67-1.5-1.5-1.5S14 7.67 14 8.5s.67 1.5 1.5 1.5S17 9.33 17 8.5zM20 2h-7v2h7v7h2V4c0-1.1-.9-2-2-2zm0 18h-7v2h7c1.1 0 2-.9 2-2v-7h-2v7zM4 13H2v7c0 1.1.9 2 2 2h7v-2H4v-7z\"/>\n                    </svg>\n                    Gallery\n                  </a>\n                  <a \n                    href=\"/contact\"\n                    className=\"text-left px-3 py-2 text-espresso hover:text-caramel font-heading text-lg transition-all duration-300 hover:translate-x-2 flex items-center\"\n                    onClick={() => setIsOpen(false)}\n                  >\n                    <svg className=\"mr-2 w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"/>\n                    </svg>\n                    Contact\n                  </a>\n                  <a \n                    href=\"/order-landing\" \n                    className=\"btn-primary mx-3 mt-4 flex items-center justify-center\"\n                    onClick={() => setIsOpen(false)}\n                  >\n                    <Coffee className=\"mr-2 w-4 h-4\" /> Order Now\n                  </a>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","size_bytes":7694},"src/components/StorySection.tsx":{"content":"export default function StorySection() {\n  return (\n    <section id=\"story\" className=\"py-24 bg-cream coffee-texture relative overflow-hidden\" data-testid=\"story-section\">\n      <div className=\"absolute inset-0 hero-gradient opacity-30\"></div>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative\">\n        <div className=\"grid lg:grid-cols-2 gap-20 items-center\">\n          <div className=\"space-y-10\">\n            <div className=\"flex items-center space-x-6\">\n              <img \n                src=\"https://iteeha.coffee/images/aboutiteeha.png\" \n                alt=\"About Iteeha\" \n                className=\"h-20 w-auto transform hover:rotate-12 transition-transform duration-300\"\n                data-testid=\"story-logo\"\n              />\n              <h2 \n                className=\"font-display font-bold text-5xl md:text-6xl bg-gradient-to-r from-warm-peach to-soft-rose bg-clip-text text-transparent animate-fade-in\" \n                data-testid=\"story-title\"\n              >\n                Our Story\n              </h2>\n            </div>\n            \n            <div className=\"prose prose-lg max-w-none animate-slide-up\" data-testid=\"story-content\">\n              <p className=\"font-sans text-xl text-coffee-dark/80 leading-relaxed mb-10\">\n                <span className=\"font-display font-bold text-2xl text-warm-peach\">\"Iteeha\"</span> roughly translates to <em className=\"text-soft-rose font-medium\">as per tradition</em>, and keeping that in mind, we adopted the virtue of doing <strong className=\"font-display text-mint-green\">Basic but Beautiful</strong>. We offer light and simple products, but beautifully done. We understand the importance of a well-made cup of coffee, and hence focus immensely on sourcing just the right beans, training our staff continually, and equipping our cafes with the best machines. Tie that in with our warm service and you've got yourself an experience that will keep you coming back for more. Iteeha Coffee is a sanctuary for all those that are seeking a comforting cuppa and a moment to pause and reflect.\n              </p>\n            </div>\n            \n            <a \n              href=\"/about\" \n              className=\"inline-flex items-center bg-warm-peach text-white px-10 py-4 rounded-full font-display text-xl hover:bg-soft-rose transition-all duration-300 transform hover:scale-110 hover:shadow-xl hover:shadow-warm-peach/20 group\"\n              data-testid=\"story-learn-more\"\n            >\n              Learn More About Us\n              <svg \n                className=\"w-6 h-6 ml-3 transform transition-transform duration-300 group-hover:translate-x-2\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n              </svg>\n            </a>\n          </div>\n          \n          <div className=\"relative\">\n            <div className=\"relative rounded-[2.5rem] overflow-hidden transform hover:scale-105 transition-transform duration-500 shadow-2xl\">\n              <img \n                src=\"https://picsum.photos/800/600?random=5\" \n                alt=\"Cozy coffee shop interior\" \n                className=\"w-full h-auto\"\n                data-testid=\"story-image\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-coffee-dark/30 to-transparent\"></div>\n            </div>\n            \n            {/* Floating Elements */}\n            <div \n              className=\"absolute -top-8 -right-8 bg-white rounded-3xl p-6 shadow-xl hover:shadow-2xl hover:scale-105 transition-all duration-300 cursor-pointer\" \n              style={{animation: 'float 4s ease-in-out infinite'}} \n              data-testid=\"story-feature-quality\"\n            >\n              <div className=\"flex items-center space-x-4\">\n                <svg className=\"w-10 h-10 text-mint-green\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M18.5 3H6c-1.1 0-2 .9-2 2v2c0 1.1.9 2 2 2v9c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM16 17H8V9h8v8zm2-10H6V5h12v2z\"/>\n                </svg>\n                <div>\n                  <p className=\"font-display font-bold text-lg text-coffee-dark\">Premium Quality</p>\n                  <p className=\"font-sans text-soft-rose\">Carefully sourced beans</p>\n                </div>\n              </div>\n            </div>\n            \n            <div \n              className=\"absolute -bottom-8 -left-8 bg-warm-peach rounded-3xl p-6 shadow-xl hover:shadow-2xl hover:scale-105 transition-all duration-300 cursor-pointer text-white\" \n              style={{animation: 'float 4s ease-in-out infinite 1s'}} \n              data-testid=\"story-feature-service\"\n            >\n              <div className=\"flex items-center space-x-4\">\n                <svg className=\"w-10 h-10 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n                </svg>\n                <div>\n                  <p className=\"font-display font-bold text-lg\">Warm Service</p>\n                  <p className=\"font-sans text-white/80\">From our heart to yours</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5506},"src/hooks/use-hero-slider.tsx":{"content":"import { useState, useEffect } from \"react\";\n\nexport function useHeroSlider() {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const totalSlides = 3;\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentSlide((prev) => (prev + 1) % totalSlides);\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return {\n    currentSlide,\n    setCurrentSlide,\n  };\n}\n","size_bytes":406},"src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"src/lib/gallery-data.ts":{"content":"export interface GalleryImage {\n  src: string;\n  alt: string;\n  aspectRatio: string;\n}\n\nexport const galleryImages: GalleryImage[] = [\n  {\n    src: \"https://iteeha.coffee/images/g9.jpg\",\n    alt: \"Coffee shop interior\",\n    aspectRatio: \"aspect-square\"\n  },\n  {\n    src: \"https://iteeha.coffee/images/g12.jpg\",\n    alt: \"Coffee brewing process\",\n    aspectRatio: \"aspect-[4/5]\"\n  },\n  {\n    src: \"https://iteeha.coffee/images/g10.jpg\",\n    alt: \"Coffee beans\",\n    aspectRatio: \"aspect-square\"\n  },\n  {\n    src: \"https://iteeha.coffee/images/1.png\",\n    alt: \"Iteeha coffee experience\",\n    aspectRatio: \"aspect-[3/4]\"\n  },\n  {\n    src: \"https://iteeha.coffee/images/2.png\",\n    alt: \"Coffee menu\",\n    aspectRatio: \"aspect-square\"\n  },\n  {\n    src: \"https://iteeha.coffee/images/3.png\",\n    alt: \"Coffee culture\",\n    aspectRatio: \"aspect-[4/5]\"\n  },\n  {\n    src: \"https://iteeha.coffee/images/e7.jpg\",\n    alt: \"Coffee shop atmosphere\",\n    aspectRatio: \"aspect-square\"\n  },\n  {\n    src: \"https://iteeha.coffee/images/e12.jpg\",\n    alt: \"Coffee preparation\",\n    aspectRatio: \"aspect-[3/4]\"\n  },\n  {\n    src: \"https://iteeha.coffee/images/e8.jpg\",\n    alt: \"Coffee serving\",\n    aspectRatio: \"aspect-square\"\n  },\n  {\n    src: \"https://iteeha.coffee/images/g1.jpg\",\n    alt: \"Cozy coffee corner\",\n    aspectRatio: \"aspect-[4/5]\"\n  },\n  {\n    src: \"https://iteeha.coffee/images/g6.jpg\",\n    alt: \"Coffee shop details\",\n    aspectRatio: \"aspect-square\"\n  },\n  {\n    src: \"https://iteeha.coffee/images/g2.jpg\",\n    alt: \"Coffee craftsmanship\",\n    aspectRatio: \"aspect-[3/4]\"\n  }\n];\n\nexport const homeGalleryImages = galleryImages.slice(0, 6); // Show first 6 on homepage\n","size_bytes":1670},"src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"src/pages/about.tsx":{"content":"import Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport CoffeeVerseEffects from \"@/components/CoffeeVerseEffects\";\nimport { useState, useEffect } from \"react\";\n\nexport default function About() {\n  const [scrollY, setScrollY] = useState(0);\n  const [magicalClicks, setMagicalClicks] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => setScrollY(window.scrollY);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const handleMagicalClick = () => {\n    setMagicalClicks(prev => prev + 1);\n    if (magicalClicks >= 2) {\n      alert('✨ You discovered our coffee magic! Welcome to the Coffee Verse! ☕✨');\n      setMagicalClicks(0);\n    }\n  };\n\n  return (\n    <>\n      <CoffeeVerseEffects />\n      <title>About Us - Iteeha Coffee | Our Story & Tradition</title>\n      <meta name=\"description\" content=\"Learn about Iteeha Coffee's journey - 'as per tradition' we believe in doing 'Basic but Beautiful'. Discover our philosophy, sourcing practices, and commitment to quality coffee.\" />\n      \n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-16 coffee-verse-hero immersive-background parallax-section\" data-testid=\"about-hero\" style={{transform: `translateY(${scrollY * 0.1}px)`}}>\n        {/* Floating Coffee Elements */}\n        <div className=\"floating-coffee-elements\">\n          <div className=\"floating-element\">☕</div>\n          <div className=\"floating-element\">✨</div>\n          <div className=\"floating-element\">🌿</div>\n          <div className=\"floating-element\">☔</div>\n        </div>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          <div className=\"text-center\">\n            <img \n              src=\"https://iteeha.coffee/images/aboutiteeha.png\" \n              alt=\"About Iteeha\" \n              className=\"h-20 w-auto mx-auto mb-8 magical-hover easter-egg\"\n              data-testid=\"about-hero-logo\"\n              onClick={handleMagicalClick}\n            />\n            <h1 className=\"font-display font-bold text-5xl md:text-6xl text-gradient immersive-text mb-6 animate-shimmer\" data-testid=\"about-hero-title\">\n              Our Story\n            </h1>\n            <p className=\"text-xl text-white/90 max-w-3xl mx-auto playful-text\" data-testid=\"about-hero-subtitle\">\n              Where tradition meets innovation in every carefully crafted cup ✨\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Main Story Section */}\n      <section className=\"py-20 immersive-section parallax-section\" data-testid=\"about-story\" style={{transform: `translateY(${scrollY * 0.05}px)`}}>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <div className=\"space-y-8 magical-hover\">\n              <h2 className=\"font-display font-bold text-4xl text-gradient animate-shimmer\" data-testid=\"about-who-we-are\">\n                Who We Are ☕\n              </h2>\n              \n              <div className=\"prose prose-lg max-w-none\" data-testid=\"about-story-content\">\n                <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                  As a cozy café in the heart of Mumbai, we are a quiet spot for you amidst the city's turmoil. \n                  With our thoughtfully curated range of coffees, bakes, artisanal teas, freshly cold-pressed \n                  juices and premium sandwiches, Iteeha Coffee is your space to unwind.\n                </p>\n                \n                <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                  The fact that we are an articulation of Iteeha Corporation, an art studio where creativity \n                  and traditions are celebrated, shows in our minimal and elegant ambience.\n                </p>\n                \n                <p className=\"text-espresso text-lg leading-relaxed mb-6 playful-text\">\n                  <span className=\"font-semibold text-gradient\">\"Iteeha\"</span> roughly translates to \n                  <em> 'as per tradition'</em>, and keeping that in mind, we adopted the virtue of doing \n                  <strong className=\"text-gradient\"> 'Basic but Beautiful'</strong>. We offer light and simple products, but beautifully done. ✨\n                </p>\n                \n                <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                  We understand the importance of a well-made cup of coffee, and hence focus immensely on \n                  sourcing just the right beans, training our staff continually, and equipping our cafes \n                  with the best machines.\n                </p>\n                \n                <p className=\"text-charcoal text-lg leading-relaxed mb-8\">\n                  Tie that in with our warm service and you've got yourself an experience that will keep \n                  you coming back for more. Iteeha Coffee is a sanctuary for all those that are seeking \n                  a comforting cuppa and a moment to pause and reflect.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"relative magical-hover\">\n              <img \n                src=\"https://iteeha.coffee/images/aboutimg.png\" \n                alt=\"Iteeha Coffee Story\" \n                className=\"rounded-2xl shadow-2xl w-full h-auto transform hover:scale-105 transition-all duration-500\"\n                data-testid=\"about-story-image\"\n              />\n              <div className=\"absolute -top-4 -right-4 text-3xl animate-bounce opacity-70 easter-egg\" onClick={() => alert('📸 This is where the magic happens! ✨')}>\n                📸\n              </div>\n              <div className=\"absolute -bottom-4 -left-4 text-2xl animate-pulse opacity-60\">\n                ☕\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Values Section */}\n      <section className=\"py-20 coffee-verse-hero parallax-section\" data-testid=\"about-values\" style={{transform: `translateY(${scrollY * 0.03}px)`}}>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-display font-bold text-4xl md:text-5xl text-gradient immersive-text mb-6 animate-shimmer\" data-testid=\"about-values-title\">\n              Our Values 🌟\n            </h2>\n            <p className=\"text-white/90 text-lg max-w-2xl mx-auto playful-text\" data-testid=\"about-values-subtitle\">\n              The principles that guide us in creating exceptional coffee experiences ✨\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-12\">\n            <div className=\"text-center\" data-testid=\"value-tradition\">\n              <div className=\"bg-coffee-brown text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <svg className=\"w-10 h-10\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n                </svg>\n              </div>\n              <h3 className=\"font-inter font-semibold text-2xl text-coffee-brown mb-4\">Tradition</h3>\n              <p className=\"text-charcoal leading-relaxed\">\n                'As per tradition' - we honor time-tested methods while embracing innovation in our craft.\n              </p>\n            </div>\n            \n            <div className=\"text-center\" data-testid=\"value-quality\">\n              <div className=\"bg-coffee-brown text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <svg className=\"w-10 h-10\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M18.5 3H6c-1.1 0-2 .9-2 2v2c0 1.1.9 2 2 2v9c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM16 17H8V9h8v8zm2-10H6V5h12v2z\"/>\n                </svg>\n              </div>\n              <h3 className=\"font-inter font-semibold text-2xl text-coffee-brown mb-4\">Quality</h3>\n              <p className=\"text-charcoal leading-relaxed\">\n                From sourcing the finest beans to training our staff - excellence in every detail.\n              </p>\n            </div>\n            \n            <div className=\"text-center\" data-testid=\"value-simplicity\">\n              <div className=\"bg-coffee-brown text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <svg className=\"w-10 h-10\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n                </svg>\n              </div>\n              <h3 className=\"font-inter font-semibold text-2xl text-coffee-brown mb-4\">Simplicity</h3>\n              <p className=\"text-charcoal leading-relaxed\">\n                'Basic but Beautiful' - we believe in elegant simplicity that speaks to the heart.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-coffee-brown text-white\" data-testid=\"about-cta\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"font-inter font-bold text-4xl mb-6\" data-testid=\"about-cta-title\">\n            Follow Our Journey\n          </h2>\n          <p className=\"text-coffee-cream text-lg mb-8 max-w-2xl mx-auto\" data-testid=\"about-cta-subtitle\">\n            Stay connected with us and be part of our coffee community\n          </p>\n          <a \n            href=\"https://www.instagram.com/iteeha.coffee/\" \n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-flex items-center bg-coffee-gold text-white px-8 py-4 rounded-full font-inter font-semibold text-lg hover:bg-coffee-cream hover:text-coffee-brown transition-all duration-300 transform hover:scale-105\"\n            data-testid=\"about-follow-button\"\n          >\n            Follow Us on Instagram\n            <svg className=\"w-6 h-6 ml-3\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 6.62 5.367 11.987 11.988 11.987 6.62 0 11.987-5.367 11.987-11.987C24.014 5.367 18.637.001 12.017.001zM8.448 16.988c-1.297 0-2.448-1.207-2.448-2.448s1.151-2.448 2.448-2.448c1.297 0 2.448 1.207 2.448 2.448s-1.151 2.448-2.448 2.448z\"/>\n            </svg>\n          </a>\n        </div>\n      </section>\n\n      <Footer />\n    </>\n  );\n}\n","size_bytes":10773},"src/pages/contact.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport CoffeeVerseEffects from \"@/components/CoffeeVerseEffects\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function Contact() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    person: '',\n    message: ''\n  });\n  const [scrollY, setScrollY] = useState(0);\n  const [magicalSubmission, setMagicalSubmission] = useState(false);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const handleScroll = () => setScrollY(window.scrollY);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setMagicalSubmission(true);\n    setTimeout(() => setMagicalSubmission(false), 3000);\n    // Here you would typically send the form data to your backend\n    toast({\n      title: \"✨ Message Sent!\",\n      description: \"Thank you for contacting us. We'll get back to you soon with some coffee magic! ☕\",\n    });\n    setFormData({ name: '', email: '', phone: '', person: '', message: '' });\n  };\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <>\n      <CoffeeVerseEffects />\n      <title>Contact Us - Iteeha Coffee | Mumbai Locations & Hours</title>\n      <meta name=\"description\" content=\"Visit Iteeha Coffee in Mumbai. Find our locations in Mahalaxmi, Lower Parel, and Bandra West. Open 7:30 AM to 11:30 PM daily. Contact us at connect@iteeha.coffee\" />\n      \n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-16 coffee-verse-hero immersive-background parallax-section\" data-testid=\"contact-hero\" style={{transform: `translateY(${scrollY * 0.1}px)`}}>\n        {/* Magical Contact Elements */}\n        <div className=\"absolute top-20 left-10 text-4xl opacity-20 animate-float\">📞</div>\n        <div className=\"absolute bottom-10 right-10 text-3xl opacity-30 animate-bounce\">✉️</div>\n        <div className=\"absolute top-1/2 left-20 text-2xl opacity-15 animate-pulse\">💌</div>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          <div className=\"text-center\">\n            <h1 className=\"font-display font-bold text-5xl md:text-6xl text-gradient immersive-text mb-6 animate-shimmer\" data-testid=\"contact-hero-title\">\n              Contact Us ☕\n            </h1>\n            <p className=\"text-xl text-white/90 max-w-3xl mx-auto playful-text\" data-testid=\"contact-hero-subtitle\">\n              Come experience the warmth of Iteeha Coffee. We're here to serve you the perfect cup. ✨\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Form and Info */}\n      <section className=\"py-20 bg-white\" data-testid=\"contact-main\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-16\">\n            \n            {/* Contact Form */}\n            <div className=\"bg-coffee-light rounded-2xl p-8\" data-testid=\"contact-form-section\">\n              <h2 className=\"font-inter font-bold text-3xl text-coffee-brown mb-8\" data-testid=\"contact-form-title\">\n                Send us a Message\n              </h2>\n              \n              <form onSubmit={handleSubmit} className=\"space-y-6\" data-testid=\"contact-form\">\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div>\n                    <Label htmlFor=\"name\" className=\"text-coffee-brown font-medium\">Name *</Label>\n                    <Input\n                      id=\"name\"\n                      type=\"text\"\n                      value={formData.name}\n                      onChange={(e) => handleInputChange('name', e.target.value)}\n                      className=\"mt-2\"\n                      required\n                      data-testid=\"input-name\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"email\" className=\"text-coffee-brown font-medium\">Email *</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={(e) => handleInputChange('email', e.target.value)}\n                      className=\"mt-2\"\n                      required\n                      data-testid=\"input-email\"\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div>\n                    <Label htmlFor=\"phone\" className=\"text-coffee-brown font-medium\">Phone</Label>\n                    <Input\n                      id=\"phone\"\n                      type=\"tel\"\n                      value={formData.phone}\n                      onChange={(e) => handleInputChange('phone', e.target.value)}\n                      className=\"mt-2\"\n                      data-testid=\"input-phone\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"person\" className=\"text-coffee-brown font-medium\">Contact Person *</Label>\n                    <Select value={formData.person} onValueChange={(value) => handleInputChange('person', value)} required>\n                      <SelectTrigger className=\"mt-2\" data-testid=\"select-person\">\n                        <SelectValue placeholder=\"Please Select Person\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"general\">General Inquiry</SelectItem>\n                        <SelectItem value=\"manager\">Store Manager</SelectItem>\n                        <SelectItem value=\"catering\">Catering Services</SelectItem>\n                        <SelectItem value=\"feedback\">Feedback</SelectItem>\n                        <SelectItem value=\"partnerships\">Partnerships</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n                \n                <div>\n                  <Label htmlFor=\"message\" className=\"text-coffee-brown font-medium\">Message *</Label>\n                  <Textarea\n                    id=\"message\"\n                    value={formData.message}\n                    onChange={(e) => handleInputChange('message', e.target.value)}\n                    className=\"mt-2 min-h-[120px]\"\n                    placeholder=\"Tell us how we can help you...\"\n                    required\n                    data-testid=\"textarea-message\"\n                  />\n                </div>\n                \n                <Button \n                  type=\"submit\" \n                  className=\"w-full bg-coffee-brown text-white hover:bg-coffee-dark py-3 text-lg font-semibold\"\n                  data-testid=\"button-send-message\"\n                >\n                  Send Message\n                </Button>\n              </form>\n            </div>\n\n            {/* Contact Information */}\n            <div className=\"space-y-8\" data-testid=\"contact-info-section\">\n              <div>\n                <h2 className=\"font-inter font-bold text-3xl text-coffee-brown mb-8\" data-testid=\"contact-info-title\">\n                  Get in Touch\n                </h2>\n                \n                <div className=\"space-y-6\">\n                  <div className=\"flex items-start space-x-4\" data-testid=\"contact-email\">\n                    <div className=\"bg-coffee-brown text-white w-12 h-12 rounded-full flex items-center justify-center flex-shrink-0\">\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26c.67.36 1.45.36 2.12 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                      </svg>\n                    </div>\n                    <div>\n                      <h3 className=\"font-inter font-semibold text-xl text-coffee-brown mb-2\">Email</h3>\n                      <p className=\"text-charcoal\">connect@iteeha.coffee</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-4\" data-testid=\"contact-hours\">\n                    <div className=\"bg-coffee-brown text-white w-12 h-12 rounded-full flex items-center justify-center flex-shrink-0\">\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                        <polyline points=\"12,6 12,12 16,14\" />\n                      </svg>\n                    </div>\n                    <div>\n                      <h3 className=\"font-inter font-semibold text-xl text-coffee-brown mb-2\">Hours</h3>\n                      <p className=\"text-charcoal\">7:30 AM - 11:30 PM<br />All Days</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-4\" data-testid=\"contact-social\">\n                    <div className=\"bg-coffee-brown text-white w-12 h-12 rounded-full flex items-center justify-center flex-shrink-0\">\n                      <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 6.62 5.367 11.987 11.988 11.987 6.62 0 11.987-5.367 11.987-11.987C24.014 5.367 18.637.001 12.017.001zM8.448 16.988c-1.297 0-2.448-1.207-2.448-2.448s1.151-2.448 2.448-2.448c1.297 0 2.448 1.207 2.448 2.448s-1.151 2.448-2.448 2.448z\"/>\n                      </svg>\n                    </div>\n                    <div>\n                      <h3 className=\"font-inter font-semibold text-xl text-coffee-brown mb-2\">Follow Us</h3>\n                      <a \n                        href=\"https://www.instagram.com/iteeha.coffee/\" \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                        className=\"text-coffee-brown hover:text-coffee-gold transition-colors\"\n                        data-testid=\"social-instagram-link\"\n                      >\n                        @iteeha.coffee\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Locations Section */}\n      <section className=\"py-20 bg-coffee-light\" data-testid=\"contact-locations\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-inter font-bold text-4xl md:text-5xl text-coffee-brown mb-6\" data-testid=\"locations-title\">\n              Our Locations\n            </h2>\n            <p className=\"text-charcoal text-lg max-w-2xl mx-auto\" data-testid=\"locations-subtitle\">\n              Visit us at any of our cozy Mumbai locations\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {/* Mahalaxmi Location */}\n            <div className=\"bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-shadow\" data-testid=\"location-mahalaxmi\">\n              <div className=\"bg-coffee-brown text-white w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n              </div>\n              <h3 className=\"font-inter font-semibold text-2xl text-coffee-brown mb-4 text-center\">Mahalaxmi</h3>\n              <p className=\"text-charcoal text-center leading-relaxed\">\n                Ground Floor, Urmi Axis Building, West, behind Famous studio, opp. Doctor Elijah Moses Road, Mahalakshmi, Mumbai, Maharashtra 400011\n              </p>\n            </div>\n            \n            {/* Lower Parel Location */}\n            <div className=\"bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-shadow\" data-testid=\"location-lower-parel\">\n              <div className=\"bg-coffee-brown text-white w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n              </div>\n              <h3 className=\"font-inter font-semibold text-2xl text-coffee-brown mb-4 text-center\">Lower Parel</h3>\n              <p className=\"text-charcoal text-center leading-relaxed\">\n                95, Ganpatrao Kadam Marg, Opposite Peninsula Business Park, Lower Parel West, Mumbai, Maharashtra 400013\n              </p>\n            </div>\n            \n            {/* Bandra West Location */}\n            <div className=\"bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-shadow\" data-testid=\"location-bandra\">\n              <div className=\"bg-coffee-brown text-white w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n              </div>\n              <h3 className=\"font-inter font-semibold text-2xl text-coffee-brown mb-4 text-center\">Bandra West</h3>\n              <p className=\"text-charcoal text-center leading-relaxed\">\n                Shop 6, Shanti Vanam, Hill Road, Bandra West, Mumbai\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </>\n  );\n}\n","size_bytes":14871},"src/pages/gallery.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport CoffeeVerseEffects from \"@/components/CoffeeVerseEffects\";\nimport { X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { galleryImages } from \"@/lib/gallery-data\";\n\nexport default function Gallery() {\n  const [isLightboxOpen, setIsLightboxOpen] = useState(false);\n  const [currentImage, setCurrentImage] = useState(\"\");\n  const [scrollY, setScrollY] = useState(0);\n  const [easterEggCount, setEasterEggCount] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => setScrollY(window.scrollY);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const openLightbox = (imageSrc: string) => {\n    setCurrentImage(imageSrc);\n    setIsLightboxOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const closeLightbox = () => {\n    setIsLightboxOpen(false);\n    setCurrentImage(\"\");\n    document.body.style.overflow = 'auto';\n  };\n\n  const handleEasterEgg = () => {\n    setEasterEggCount(prev => prev + 1);\n    if (easterEggCount >= 3) {\n      alert('📸 Secret Gallery Master! You found all the hidden spots! ✨🎉');\n      setEasterEggCount(0);\n    }\n  };\n\n  return (\n    <>\n      <CoffeeVerseEffects />\n      <title>Gallery - Iteeha Coffee | Coffee Shop Atmosphere & Experience</title>\n      <meta name=\"description\" content=\"Explore our coffee shop atmosphere, brewing process, and memorable moments at Iteeha Coffee. See what makes our Mumbai locations special.\" />\n      \n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-16 coffee-verse-hero immersive-background parallax-section\" data-testid=\"gallery-hero\" style={{transform: `translateY(${scrollY * 0.1}px)`}}>\n        {/* Magical Camera Effects */}\n        <div className=\"absolute top-20 left-10 text-4xl opacity-20 animate-bounce easter-egg\" onClick={handleEasterEgg}>📸</div>\n        <div className=\"absolute bottom-10 right-10 text-3xl opacity-30 animate-spin\" style={{animationDuration: '8s'}}>✨</div>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          <div className=\"text-center\">\n            <h1 className=\"font-display font-bold text-5xl md:text-6xl text-gradient immersive-text mb-6 animate-shimmer\" data-testid=\"gallery-hero-title\">\n              Gallery\n            </h1>\n            <p className=\"text-xl text-white/90 max-w-3xl mx-auto playful-text\" data-testid=\"gallery-hero-subtitle\">\n              Take a peek into our world of coffee craftsmanship, cozy atmosphere, and memorable moments 📸✨\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Gallery Grid */}\n      <section className=\"py-20 immersive-section parallax-section\" data-testid=\"gallery-main\" style={{transform: `translateY(${scrollY * 0.02}px)`}}>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\" data-testid=\"gallery-grid\">\n            {galleryImages.map((image, index) => (\n              <div\n                key={index}\n                className={`gallery-item overflow-hidden rounded-xl cursor-pointer magical-hover playful-hover ${image.aspectRatio} bg-gradient-to-br from-cream to-foam`}\n                onClick={() => {\n                  openLightbox(image.src);\n                  if (index === 5 || index === 10) handleEasterEgg();\n                }}\n                data-testid={`gallery-item-${index}`}\n              >\n                <img \n                  src={image.src} \n                  alt={image.alt} \n                  className=\"w-full h-full object-cover hover:scale-110 transition-all duration-500 filter hover:brightness-110\"\n                  loading=\"lazy\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 hover:opacity-100 transition-opacity duration-300\"></div>\n                {(index === 5 || index === 10) && (\n                  <div className=\"absolute top-2 right-2 text-yellow-400 animate-pulse\">⭐</div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Categories Section */}\n      <section className=\"py-20 coffee-verse-hero parallax-section\" data-testid=\"gallery-categories\" style={{transform: `translateY(${scrollY * 0.04}px)`}}>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-display font-bold text-4xl text-gradient immersive-text mb-6 animate-shimmer\" data-testid=\"gallery-categories-title\">\n              Experience Iteeha 🎨\n            </h2>\n            <p className=\"text-white/90 text-lg max-w-2xl mx-auto playful-text\" data-testid=\"gallery-categories-subtitle\">\n              From coffee craftsmanship to cozy moments - discover what makes Iteeha special ✨\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <div className=\"text-center magical-hover\" data-testid=\"gallery-category-craft\">\n              <div className=\"bg-gradient-to-br from-caramel to-golden-brew text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 coffee-steam animate-pulse-glow\">\n                <svg className=\"w-10 h-10\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M18.5 3H6c-1.1 0-2 .9-2 2v2c0 1.1.9 2 2 2v9c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM16 17H8V9h8v8zm2-10H6V5h12v2z\"/>\n                </svg>\n              </div>\n              <h3 className=\"font-display font-semibold text-2xl text-gradient mb-4\">Coffee Craft ☕</h3>\n              <p className=\"text-white/90 leading-relaxed playful-text\">\n                Witness our baristas at work, from bean selection to the perfect pour ✨\n              </p>\n            </div>\n            \n            <div className=\"text-center\" data-testid=\"gallery-category-atmosphere\">\n              <div className=\"bg-coffee-brown text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <svg className=\"w-10 h-10\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n                </svg>\n              </div>\n              <h3 className=\"font-inter font-semibold text-2xl text-coffee-brown mb-4\">Cozy Atmosphere</h3>\n              <p className=\"text-charcoal leading-relaxed\">\n                Explore our thoughtfully designed spaces that invite you to pause and reflect\n              </p>\n            </div>\n            \n            <div className=\"text-center\" data-testid=\"gallery-category-moments\">\n              <div className=\"bg-coffee-brown text-white w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <svg className=\"w-10 h-10\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M9 11H7v3h2v-3zm4 0h-2v3h2v-3zm4 0h-2v3h2v-3zm2-7h-1V2h-2v2H8V2H6v2H5a2 2 0 00-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z\"/>\n                </svg>\n              </div>\n              <h3 className=\"font-inter font-semibold text-2xl text-coffee-brown mb-4\">Special Moments</h3>\n              <p className=\"text-charcoal leading-relaxed\">\n                Capturing the conversations, connections, and memories made over coffee\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-coffee-brown text-white\" data-testid=\"gallery-cta\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"font-inter font-bold text-4xl mb-6\" data-testid=\"gallery-cta-title\">\n            Visit Us Today\n          </h2>\n          <p className=\"text-coffee-cream text-lg mb-8 max-w-2xl mx-auto\" data-testid=\"gallery-cta-subtitle\">\n            Experience the atmosphere for yourself at any of our Mumbai locations\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <a \n              href=\"/contact\" \n              className=\"inline-flex items-center bg-coffee-gold text-white px-8 py-4 rounded-full font-inter font-semibold text-lg hover:bg-coffee-cream hover:text-coffee-brown transition-all duration-300 transform hover:scale-105\"\n              data-testid=\"gallery-visit-button\"\n            >\n              Find Our Locations\n              <svg className=\"w-6 h-6 ml-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n              </svg>\n            </a>\n            <a \n              href=\"/order-landing\" \n              className=\"inline-flex items-center bg-transparent border-2 border-coffee-gold text-coffee-gold px-8 py-4 rounded-full font-inter font-semibold text-lg hover:bg-coffee-gold hover:text-white transition-all duration-300 transform hover:scale-105\"\n              data-testid=\"gallery-order-button\"\n            >\n              Order Now\n              <svg className=\"w-6 h-6 ml-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n              </svg>\n            </a>\n          </div>\n        </div>\n      </section>\n\n      {/* Lightbox */}\n      {isLightboxOpen && (\n        <div \n          className=\"fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4\"\n          onClick={closeLightbox}\n          data-testid=\"lightbox-overlay\"\n        >\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"absolute top-4 right-4 text-white hover:text-coffee-gold z-10\"\n            onClick={closeLightbox}\n            data-testid=\"lightbox-close\"\n          >\n            <X className=\"h-8 w-8\" />\n          </Button>\n          \n          <img\n            src={currentImage}\n            alt=\"Gallery image\"\n            className=\"max-w-full max-h-full object-contain rounded-lg\"\n            onClick={(e) => e.stopPropagation()}\n            data-testid=\"lightbox-image\"\n          />\n        </div>\n      )}\n\n      <Footer />\n    </>\n  );\n}\n","size_bytes":10779},"src/pages/home.tsx":{"content":"import Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport CoffeeVerseEffects from \"@/components/CoffeeVerseEffects\";\nimport { Coffee, Bean, Croissant, Leaf, Smile, Heart } from \"lucide-react\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Home() {\n  const [scrollY, setScrollY] = useState(0);\n  const [showEasterEgg, setShowEasterEgg] = useState(false);\n  const [clickCount, setClickCount] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => setScrollY(window.scrollY);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const handleEasterEgg = () => {\n    setClickCount(prev => prev + 1);\n    if (clickCount >= 4) {\n      setShowEasterEgg(true);\n      setTimeout(() => setShowEasterEgg(false), 3000);\n      setClickCount(0);\n    }\n  };\n\n  const menuItems = [\n    { \n      name: \"Caramel Macchiato\", \n      description: \"Espresso with steamed milk and vanilla, topped with caramel\", \n      price: \"$5.25\",\n      icon: <Coffee className=\"text-espresso w-6 h-6\" />\n    },\n    { \n      name: \"Avocado Toast\", \n      description: \"Sourdough toast with mashed avocado, cherry tomatoes, and microgreens\", \n      price: \"$8.50\",\n      icon: <Croissant className=\"text-espresso w-6 h-6\" />\n    },\n    { \n      name: \"Matcha Latte\", \n      description: \"Premium matcha powder with steamed oat milk\", \n      price: \"$5.75\",\n      icon: <Leaf className=\"text-espresso w-6 h-6\" />\n    }\n  ];\n\n  return (\n    <div className=\"doodle-bg smooth-scroll\">\n      <CoffeeVerseEffects />\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-16 px-4 md:px-8 relative overflow-hidden\">\n        <div className=\"max-w-7xl mx-auto grid md:grid-cols-2 gap-12 items-center\">\n          <div className=\"relative z-10\">\n            <div className=\"doodle-icon absolute -top-6 -left-6 wiggle easter-egg\" onClick={handleEasterEgg}>\n              <Bean className=\"text-espresso w-6 h-6\" />\n            </div>\n            {showEasterEgg && (\n              <div className=\"absolute -top-20 -left-10 text-2xl animate-bounce\">\n                🎉 You found the coffee bean secret! ☕✨\n              </div>\n            )}\n            <h1 className=\"font-display text-6xl md:text-7xl text-espresso mb-4\">\n              <span className=\"text-gradient animate-shimmer\">Sip</span>, <span className=\"text-gradient\">Smile</span>, <br />\n              <span className=\"text-caramel animate-pulse-glow\">Repeat</span>\n            </h1>\n            <p className=\"text-lg text-espresso/80 mb-8 max-w-lg\">\n              Handcrafted coffee, cozy vibes, and the perfect brew to start your day. \n              Our baristas pour love into every cup.\n            </p>\n            <div className=\"flex flex-wrap gap-4\">\n              <a href=\"/menu\" className=\"btn-primary\">\n                Explore Menu\n              </a>\n              <a href=\"/order-landing\" className=\"btn-secondary\">\n                Order Online\n              </a>\n            </div>\n          </div>\n          \n          <div className=\"relative parallax-section\" style={{transform: `translateY(${scrollY * 0.1}px)`}}>\n            <div className=\"relative rounded-3xl overflow-hidden shadow-2xl transform rotate-2 hover:rotate-0 transition-all duration-500 hover:scale-105\">\n              <img \n                src=\"https://images.pexels.com/photos/302899/pexels-photo-302899.jpeg\" \n                alt=\"Coffee art\" \n                className=\"w-full h-auto object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-r from-espresso/20 to-transparent\"></div>\n            </div>\n            \n            <div className=\"absolute -bottom-6 -right-6 bg-blush rounded-full p-4 shadow-lg bounce hover:animate-pulse-glow cursor-pointer\" onClick={() => alert('☕ Welcome to the Coffee Verse! ✨')}>\n              <Smile className=\"text-espresso w-8 h-8\" />\n            </div>\n            <div className=\"absolute top-4 left-4 coffee-steam\">\n              <Coffee className=\"text-white w-6 h-6\" />\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"wavy-divider mt-24\"></div>\n      </section>\n      \n      {/* Menu Preview */}\n      <section className=\"py-16 px-4 md:px-8 bg-foam\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-display text-4xl md:text-5xl text-espresso mb-4\">\n              Our <span className=\"text-caramel\">Favorites</span>\n            </h2>\n            <p className=\"text-lg text-espresso/80 max-w-2xl mx-auto\">\n              Handcrafted with premium ingredients and a dash of love\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {menuItems.map((item, index) => (\n              <div \n                key={index} \n                className=\"coffee-card hover:border-caramel group relative coffee-stain menu-item-hover card-hover-effect\"\n              >\n                <div className=\"doodle-icon mb-4 group-hover:bg-caramel group-hover:text-cream transition-colors coffee-steam\">\n                  {item.icon}\n                </div>\n                <h3 className=\"font-display text-2xl text-espresso mb-2 group-hover:text-gradient transition-all duration-300\">{item.name}</h3>\n                <p className=\"text-espresso/80 mb-4\">{item.description}</p>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"font-heading text-xl text-caramel\">{item.price}</span>\n                  <button className=\"text-espresso hover:text-caramel transition-all duration-300 hover:scale-125 hover:rotate-12 easter-egg\" onClick={() => alert(`❤️ Added ${item.name} to favorites! ✨`)}>\n                    <Heart className=\"w-5 h-5\" />\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"text-center mt-12\">\n            <a href=\"/menu\" className=\"btn-primary inline-flex items-center group\">\n              See Full Menu <Bean className=\"ml-2 w-4 h-4 group-hover:animate-spin\" />\n            </a>\n          </div>\n        </div>\n      </section>\n      \n      {/* Story Section */}\n      <section className=\"py-24 px-4 md:px-8 relative parallax-section\" style={{transform: `translateY(${scrollY * 0.05}px)`}}>\n        <div className=\"max-w-7xl mx-auto grid md:grid-cols-2 gap-12 items-center\">\n          <div className=\"relative\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"rounded-2xl overflow-hidden shadow-lg transform -rotate-3\">\n                <img \n                  src=\"https://images.pexels.com/photos/3171837/pexels-photo-3171837.jpeg\" \n                  alt=\"Cafe interior\" \n                  className=\"w-full h-64 object-cover\"\n                />\n              </div>\n              <div className=\"rounded-2xl overflow-hidden shadow-lg transform rotate-2 mt-8\">\n                <img \n                  src=\"https://images.pexels.com/photos/2067638/pexels-photo-2067638.jpeg\" \n                  alt=\"Barista making coffee\" \n                  className=\"w-full h-64 object-cover\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"absolute -top-6 -left-6 bg-sage rounded-full p-4 shadow-lg wiggle easter-egg\" onClick={() => alert('🌿 Eco-friendly coffee! We care about our planet! 🌍')}>\n              <Leaf className=\"text-cream w-8 h-8\" />\n            </div>\n            <div className=\"absolute -bottom-8 -right-8 text-4xl animate-bounce opacity-50\">\n              ✨\n            </div>\n          </div>\n          \n          <div>\n            <h2 className=\"font-display text-4xl md:text-5xl text-espresso mb-6\">\n              Our <span className=\"text-caramel\">Story</span>\n            </h2>\n            <p className=\"text-lg text-espresso/80 mb-6\">\n              Iteeha began as a dream between two friends who believed coffee should be an experience, \n              not just a caffeine fix. We source ethically, roast locally, and pour passionately.\n            </p>\n            <p className=\"text-lg text-espresso/80 mb-8\">\n              Our cozy space is designed for connection - whether you're catching up with friends, \n              diving into a good book, or finding inspiration for your next project.\n            </p>\n            <a href=\"/about\" className=\"btn-primary inline-flex items-center\">\n              Learn More <Bean className=\"ml-2 w-4 h-4\" />\n            </a>\n          </div>\n        </div>\n      </section>\n      \n      {/* Contact CTA */}\n      <section className=\"py-20 px-4 md:px-8 bg-caramel text-cream relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-caramel via-golden-brew to-sunset-orange opacity-90\"></div>\n        <div className=\"absolute top-10 left-10 text-6xl opacity-20 animate-float\">☕</div>\n        <div className=\"absolute bottom-10 right-10 text-4xl opacity-30 animate-bounce\">✨</div>\n        <div className=\"max-w-4xl mx-auto text-center relative z-10\">\n          <h2 className=\"font-display text-4xl md:text-5xl mb-6 text-gradient animate-shimmer\">\n            Come Sip With Us\n          </h2>\n          <p className=\"text-xl mb-10 max-w-2xl mx-auto\">\n            We're brewing daily from 7am to 8pm. Find us in the heart of downtown or order online for pickup.\n          </p>\n          <div className=\"flex flex-wrap justify-center gap-4\">\n            <a href=\"/contact\" className=\"btn-secondary bg-espresso hover:bg-cream hover:text-espresso transform hover:scale-105 hover:rotate-1 transition-all duration-300\">\n              Visit Us\n            </a>\n            <a href=\"/order-landing\" className=\"btn-primary bg-cream text-espresso hover:bg-espresso hover:text-cream transform hover:scale-105 hover:-rotate-1 transition-all duration-300\">\n              Order Online\n            </a>\n          </div>\n        </div>\n      </section>\n      \n      <Footer />\n      \n      {/* Enhanced Floating Order Button */}\n      <a \n        href=\"/order-landing\" \n        className=\"fixed bottom-6 right-6 bg-gradient-to-r from-caramel to-golden-brew text-cream p-4 rounded-full shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:scale-110 z-40 animate-float flex items-center group coffee-steam animate-pulse-glow\"\n        onClick={() => console.log('☕ Order button clicked! Welcome to the Coffee Verse! ✨')}\n      >\n        <Coffee className=\"w-6 h-6 group-hover:animate-spin\" />\n        <span className=\"ml-2 font-medium hidden sm:inline group-hover:text-gradient\">Order Now</span>\n      </a>\n      \n      {/* Hidden Easter Egg - Coffee Bean Rain */}\n      <div className=\"fixed top-0 left-1/2 transform -translate-x-1/2 text-2xl animate-bounce opacity-20 pointer-events-none\" style={{animationDelay: '2s'}}>\n        ☕✨☕\n      </div>\n\n      {/* Customer Testimonials with Coffee Verse Magic */}\n      <section className=\"py-24 px-4 md:px-8 coffee-verse-hero parallax-section\" style={{transform: `translateY(${scrollY * 0.02}px)`}}>\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-display text-4xl md:text-5xl text-gradient mb-6 animate-shimmer\">\n              Coffee Stories ☕✨\n            </h2>\n            <p className=\"text-white/90 text-lg max-w-2xl mx-auto playful-text\">\n              What our coffee verse visitors say about their magical experiences\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <div className=\"magical-card p-8 text-center group\">\n              <div className=\"text-6xl mb-4 animate-bounce\">🙋‍♀️</div>\n              <blockquote className=\"text-espresso italic mb-4 playful-text\">\n                \"This place feels like stepping into a coffee wonderland! Every sip is pure magic.\"\n              </blockquote>\n              <div className=\"text-caramel font-medium\">- Sarah M.</div>\n              <div className=\"text-sm text-sage\">Coffee Enthusiast</div>\n            </div>\n            \n            <div className=\"magical-card p-8 text-center group\">\n              <div className=\"text-6xl mb-4 animate-bounce\" style={{animationDelay: '0.5s'}}>🧙‍♂️</div>\n              <blockquote className=\"text-espresso italic mb-4 playful-text\">\n                \"The atmosphere here is absolutely enchanting. It's my daily dose of happiness!\"\n              </blockquote>\n              <div className=\"text-caramel font-medium\">- Rahul K.</div>\n              <div className=\"text-sm text-sage\">Regular Visitor</div>\n            </div>\n            \n            <div className=\"magical-card p-8 text-center group\">\n              <div className=\"text-6xl mb-4 animate-bounce\" style={{animationDelay: '1s'}}>👩‍💼</div>\n              <blockquote className=\"text-espresso italic mb-4 playful-text\">\n                \"Perfect blend of tradition and innovation. Every visit feels like discovering something new!\"\n              </blockquote>\n              <div className=\"text-caramel font-medium\">- Priya S.</div>\n              <div className=\"text-sm text-sage\">Business Professional</div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":13441},"src/pages/menu.tsx":{"content":"import Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport CoffeeVerseEffects from \"@/components/CoffeeVerseEffects\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Menu() {\n  const [scrollY, setScrollY] = useState(0);\n  const [favoriteItems, setFavoriteItems] = useState<Set<number>>(new Set());\n\n  useEffect(() => {\n    const handleScroll = () => setScrollY(window.scrollY);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const toggleFavorite = (index: number, itemName: string) => {\n    const newFavorites = new Set(favoriteItems);\n    if (newFavorites.has(index)) {\n      newFavorites.delete(index);\n      alert(`💔 Removed ${itemName} from favorites`);\n    } else {\n      newFavorites.add(index);\n      alert(`❤️ Added ${itemName} to favorites! ✨`);\n    }\n    setFavoriteItems(newFavorites);\n  };\n\n  const coffeeItems = [\n    { name: \"Espresso\", price: 160, description: \"Rich, bold, and concentrated coffee shot\", image: \"https://images.unsplash.com/photo-1510707577719-ae7c14805e3a?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Doppio (Double Espresso)\", price: 160, description: \"Double shot of our signature espresso\", image: \"https://images.unsplash.com/photo-1559056199-641a0ac8b55e?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Americano\", price: 180, description: \"Espresso diluted with hot water for a classic coffee experience\", image: \"https://images.unsplash.com/photo-1461023058943-07fcbe16d735?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Latte\", price: 200, description: \"Smooth espresso with steamed milk and light foam\", image: \"https://images.unsplash.com/photo-1561047029-3000c68339ca?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Cortado\", price: 190, description: \"Equal parts espresso and warm milk\", image: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Cappuccino\", price: 190, description: \"Perfect balance of espresso, steamed milk, and foam\", image: \"https://images.unsplash.com/photo-1572442388796-11668a67e53d?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Mocha\", price: 220, description: \"Espresso with chocolate and steamed milk\", image: \"https://images.unsplash.com/photo-1578985545062-69928b1d9587?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Vietnamese Cold Brew\", price: 220, description: \"Smooth, refreshing cold coffee with a unique brewing method\", image: \"https://images.unsplash.com/photo-1461023058943-07fcbe16d735?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"House Cold Coffee\", price: 250, description: \"Our signature cold coffee blend\", image: \"https://images.unsplash.com/photo-1517701604599-bb29b565090c?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Coffee Lemonade\", price: 250, description: \"Refreshing combination of coffee and citrus\", image: \"https://images.unsplash.com/photo-1544145945-f90425340c7e?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Pallonji's Cold Brew (300ml)\", price: 450, description: \"Premium cold brew in our signature bottle\", image: \"https://images.unsplash.com/photo-1461023058943-07fcbe16d735?w=300&h=200&fit=crop&crop=center\" },\n  ];\n\n  const foodItems = [\n    { name: \"Classic Spiced Chicken Sandwich\", price: 330, description: \"Tender spiced chicken with fresh vegetables\", image: \"https://images.unsplash.com/photo-1528735602780-2552fd46c7af?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Chicken Ham & Cheese Sandwich\", price: 380, description: \"Premium ham and cheese with crisp vegetables\", image: \"https://images.unsplash.com/photo-1528735602780-2552fd46c7af?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Tomato Cream Cheese Sandwich\", price: 300, description: \"Fresh tomatoes with creamy cheese spread\", image: \"https://images.unsplash.com/photo-1509440159596-0249088772ff?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Grilled Veg Pesto Sandwich\", price: 350, description: \"Grilled vegetables with house-made pesto\", image: \"https://images.unsplash.com/photo-1481070555726-e2fe8357725c?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"White Chocolate & Hazelnut Cookie\", price: 150, description: \"Soft cookie with white chocolate and hazelnuts\", image: \"https://images.unsplash.com/photo-1499636136210-6f4ee915583e?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Caramel & Chocolate Croissant\", price: 520, description: \"Buttery croissant with caramel and chocolate\", image: \"https://images.unsplash.com/photo-1555507036-ab794f1c8382?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Chocolate Cake\", price: 280, description: \"Rich, moist chocolate cake slice\", image: \"https://images.unsplash.com/photo-1578985545062-69928b1d9587?w=300&h=200&fit=crop&crop=center\" },\n  ];\n\n  const teaItems = [\n    { name: \"Green Tea Pure Joy\", price: 150, description: \"Pure green tea leaves for a refreshing experience\", image: \"https://images.unsplash.com/photo-1576092768241-dec231879fc3?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Black Tea Orange Blossom\", price: 160, description: \"Black tea infused with orange blossom notes\", image: \"https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Oolong Rose\", price: 170, description: \"Delicate oolong tea with rose petals\", image: \"https://images.unsplash.com/photo-1597318181269-d6a2a65469c0?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Black Tea Fleur Lemon\", price: 160, description: \"Black tea with lemon and floral notes\", image: \"https://images.unsplash.com/photo-1540979388789-6cee28a1cdc9?w=300&h=200&fit=crop&crop=center\" },\n  ];\n\n  const beverageItems = [\n    { name: \"Hot Chocolate\", price: 200, description: \"House-made 54% dark chocolate ganache with steamed milk\", image: \"https://images.unsplash.com/photo-1542990253-0b8be77413eb?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Fresh Cold-Pressed Juice\", price: 180, description: \"Daily selection of fresh fruit and vegetable juices\", image: \"https://images.unsplash.com/photo-1622597467836-f3285f2131b8?w=300&h=200&fit=crop&crop=center\" },\n    { name: \"Artisanal Lemonade\", price: 150, description: \"Fresh lemon with a hint of herbs\", image: \"https://images.unsplash.com/photo-1621263764928-df1444c5e859?w=300&h=200&fit=crop&crop=center\" },\n  ];\n\n  const MenuSection = ({ title, items, testId }: { title: string; items: typeof coffeeItems; testId: string }) => (\n    <div className=\"mb-16 parallax-section\" data-testid={testId} style={{transform: `translateY(${scrollY * 0.02}px)`}}>\n      <div className=\"flex items-center justify-center mb-8\">\n        <h2 className=\"font-bold text-4xl text-orange-900\">\n          {title}\n        </h2>\n      </div>\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        {items.map((item, index) => (\n          <div key={index} className=\"bg-white rounded-2xl shadow-lg p-6 hover:shadow-xl hover:scale-[1.02] transition-all duration-300 group overflow-hidden menu-item-hover card-hover-effect\" data-testid={`menu-item-${index}`}>\n            <div className=\"relative h-48 mb-4 overflow-hidden rounded-xl\">\n              <img \n                src={item.image} \n                alt={item.name}\n                className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-110\"\n                onError={(e) => {\n                  e.currentTarget.src = \"https://images.unsplash.com/photo-1447933601403-0c6688de566e?w=300&h=200&fit=crop&crop=center\";\n                }}\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent\"></div>\n              <div className=\"absolute top-4 right-4 bg-gradient-to-r from-orange-500 to-yellow-500 text-white px-3 py-1 rounded-full font-bold text-lg animate-pulse-glow\">\n                ₹{item.price}\n              </div>\n              <div className=\"absolute top-4 left-4 text-2xl opacity-50 animate-steam\">☕</div>\n            </div>\n            <div className=\"flex justify-between items-start mb-3\">\n              <h3 className=\"font-semibold text-xl text-orange-900 group-hover:text-gradient transition-colors\">\n                {item.name}\n              </h3>\n              <button \n                className={`p-1 rounded-full transition-all duration-300 hover:scale-125 ${\n                  favoriteItems.has(index) ? 'text-red-500 animate-pulse' : 'text-gray-400 hover:text-red-500'\n                }`}\n                onClick={() => toggleFavorite(index, item.name)}\n              >\n                ❤️\n              </button>\n            </div>\n            <p className=\"text-gray-600 leading-relaxed group-hover:text-gray-800 transition-colors mb-4\">\n              {item.description}\n            </p>\n            <div className=\"pt-4 border-t border-orange-100\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-green-600 font-medium\">Fresh • Made to Order ✨</span>\n                <div className=\"flex space-x-1\">\n                  {[...Array(5)].map((_, i) => (\n                    <svg key={i} className=\"w-4 h-4 text-orange-400 hover:text-yellow-500 transition-colors cursor-pointer hover:animate-bounce\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                    </svg>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CoffeeVerseEffects />\n      <title>Menu - Iteeha Coffee | Coffee, Food & Artisanal Teas in Mumbai</title>\n      <meta name=\"description\" content=\"Explore Iteeha Coffee's menu featuring specialty coffee, artisanal teas, fresh sandwiches, and baked goods. Cost for two: ₹500-1050. Basic but Beautiful.\" />\n      \n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-16 bg-gradient-to-br from-orange-50 via-orange-100 to-orange-200 relative overflow-hidden parallax-section\" data-testid=\"menu-hero\" style={{transform: `translateY(${scrollY * 0.1}px)`}}>\n        <div className=\"absolute top-10 left-10 w-32 h-32 bg-orange-400 rounded-full opacity-10 animate-bounce\"></div>\n        <div className=\"absolute bottom-10 right-10 w-48 h-48 bg-green-500 rounded-full opacity-10 animate-float\"></div>\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-8xl opacity-5 animate-spin\" style={{animationDuration: '20s'}}>☕</div>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative\">\n          <div className=\"text-center\">\n            <div className=\"mb-8\">\n              <img \n                src=\"https://images.unsplash.com/photo-1447933601403-0c6688de566e?w=120&h=120&fit=crop&crop=center\" \n                alt=\"Coffee beans\" \n                className=\"w-24 h-24 rounded-full mx-auto mb-4 border-4 border-orange-400\"\n                onError={(e) => {\n                  e.currentTarget.src = \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='120' height='120' viewBox='0 0 24 24' fill='%23f97316'%3E%3Cpath d='M18.5 3H6c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h12.5c.8 0 1.5-.7 1.5-1.5v-15c0-.8-.7-1.5-1.5-1.5zM6 19V5h12.5v14H6z'/%3E%3C/svg%3E\";\n                }}\n              />\n            </div>\n            <h1 className=\"font-bold text-6xl md:text-7xl text-orange-900 mb-6 text-gradient animate-shimmer\" data-testid=\"menu-hero-title\">\n              Our Menu\n            </h1>\n            <p className=\"text-xl text-orange-800 max-w-3xl mx-auto mb-8\" data-testid=\"menu-hero-subtitle\">\n              Thoughtfully curated coffee, bakes, artisanal teas, and premium sandwiches - Basic but Beautiful\n            </p>\n            <div className=\"flex justify-center items-center space-x-8 text-orange-900 bg-white/70 backdrop-blur-sm rounded-2xl p-6 max-w-2xl mx-auto\">\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-orange-500\">₹500-1050</div>\n                <div className=\"text-sm font-medium\">Cost for Two</div>\n              </div>\n              <div className=\"w-px h-12 bg-orange-800/30\"></div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-orange-500\">7:30 AM - 11:30 PM</div>\n                <div className=\"text-sm font-medium\">All Days</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Menu Sections */}\n      <section className=\"py-20 bg-orange-50\" data-testid=\"menu-sections\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          \n          <MenuSection \n            title=\"Coffee & Espresso\" \n            items={coffeeItems} \n            testId=\"menu-coffee\" \n          />\n          \n          <MenuSection \n            title=\"Food & Bakes\" \n            items={foodItems} \n            testId=\"menu-food\" \n          />\n          \n          <MenuSection \n            title=\"Artisanal Teas\" \n            items={teaItems} \n            testId=\"menu-tea\" \n          />\n          \n          <MenuSection \n            title=\"Other Beverages\" \n            items={beverageItems} \n            testId=\"menu-beverages\" \n          />\n\n        </div>\n      </section>\n\n      {/* Payment & Info Section */}\n      <section className=\"py-16 bg-white\" data-testid=\"menu-info\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"bg-orange-900 rounded-2xl p-8 text-white text-center\">\n            <h2 className=\"font-bold text-3xl mb-6\" data-testid=\"menu-info-title\">\n              Good to Know\n            </h2>\n            <div className=\"grid md:grid-cols-3 gap-8\">\n              <div data-testid=\"menu-info-payment\">\n                <div className=\"bg-orange-400 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-semibold text-xl mb-2\">Payment Options</h3>\n                <p className=\"text-orange-200\">We accept card payments via PayEazy for your convenience</p>\n              </div>\n              \n              <div data-testid=\"menu-info-dietary\">\n                <div className=\"bg-orange-400 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-semibold text-xl mb-2\">Dietary Options</h3>\n                <p className=\"text-orange-200\">Vegetarian and non-vegetarian options available. No alcohol served.</p>\n              </div>\n              \n              <div data-testid=\"menu-info-ordering\">\n                <div className=\"bg-orange-400 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-semibold text-xl mb-2\">Order Online</h3>\n                <p className=\"text-orange-200\">Skip the wait and order online for pickup or delivery</p>\n              </div>\n            </div>\n            \n            <div className=\"mt-8\">\n              <a \n                href=\"/order\" \n                className=\"inline-flex items-center bg-orange-400 text-white px-8 py-4 rounded-full font-semibold text-lg hover:bg-orange-300 hover:text-orange-900 transition-all duration-300 transform hover:scale-105\"\n                data-testid=\"menu-order-button\"\n              >\n                Order Online Now\n                <svg className=\"w-6 h-6 ml-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </>\n  );\n}","size_bytes":17086},"src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"src/pages/order-landing.tsx":{"content":"import { useState } from \"react\";\nimport Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { MapPin, Search, Package, Truck } from \"lucide-react\";\n\nexport default function OrderLanding() {\n  const [selectedMethod, setSelectedMethod] = useState<\"delivery\" | \"pickup\">(\"delivery\");\n  const [location, setLocation] = useState(\"\");\n\n  const handleLocationSubmit = () => {\n    if (location.trim()) {\n      // Navigate to actual order page with location\n      window.location.href = `/order?location=${encodeURIComponent(location)}`;\n    }\n  };\n\n  const handleCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        () => {\n          // For demo purposes, set a Mumbai location\n          setLocation(\"Mahalaxmi Temple, 26/A, Mahalaxmi West, Central West\");\n          setTimeout(() => {\n            window.location.href = \"/order?location=current\";\n          }, 1000);\n        },\n        () => {\n          // Fallback to manual input\n          alert(\"Unable to access location. Please enter manually.\");\n        }\n      );\n    }\n  };\n\n  return (\n    <>\n      <title>Order - Iteeha Coffee | Fresh Coffee & Food Delivery</title>\n      <meta name=\"description\" content=\"Order fresh coffee and food from Iteeha Coffee. Set your delivery location and browse our menu of specialty coffee, matcha, and delicious food items.\" />\n      \n      <Navigation />\n      \n      {/* Header */}\n      <section className=\"pt-24 pb-12 bg-gradient-to-br from-cream via-latte to-foam relative overflow-hidden\" data-testid=\"order-landing-header\">\n        <div className=\"absolute inset-0 doodle-bg opacity-30\"></div>\n        <div className=\"absolute top-20 left-20 w-20 h-20 bg-blush rounded-full opacity-20 animate-bounce\" style={{animationDelay: '0.5s'}}></div>\n        <div className=\"absolute top-32 right-32 w-16 h-16 bg-sage rounded-full opacity-20 animate-float\" style={{animationDelay: '1s'}}></div>\n        <div className=\"absolute bottom-20 left-32 w-12 h-12 bg-caramel rounded-full opacity-20 animate-wiggle\"></div>\n        \n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center relative\">\n          <div className=\"mb-8\">\n            <div className=\"relative inline-block\">\n              <img \n                src=\"https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?w=120&h=120&fit=crop&crop=center\" \n                alt=\"Coffee cup\" \n                className=\"h-20 w-20 rounded-full mx-auto mb-4 border-4 border-caramel animate-float shadow-lg\"\n              />\n              <div className=\"absolute -top-2 -right-2 w-8 h-8 bg-caramel rounded-full flex items-center justify-center animate-bounce\">\n                <span className=\"text-white text-xs font-bold\">☕</span>\n              </div>\n            </div>\n            <img \n              src=\"https://iteeha.coffee/images/vfx.png\" \n              alt=\"Iteeha Coffee\" \n              className=\"h-16 w-auto mx-auto\"\n            />\n          </div>\n          <h1 className=\"font-display font-bold text-5xl md:text-6xl text-espresso mb-4 text-shadow\" data-testid=\"order-landing-title\">\n            Let's get ordering\n          </h1>\n          <p className=\"text-lg text-espresso/80 mb-8 font-sans max-w-2xl mx-auto\">\n            Craving something delicious? Let us bring the finest coffee and treats right to your doorstep.\n          </p>\n          \n          {/* Delivery/Pickup Toggle */}\n          <div className=\"flex justify-center mb-12\">\n            <div className=\"bg-coffee-light rounded-full p-1 flex\">\n              <button\n                onClick={() => setSelectedMethod(\"delivery\")}\n                className={`px-6 py-2 rounded-full font-medium transition-all ${\n                  selectedMethod === \"delivery\"\n                    ? \"bg-coffee-brown text-white\"\n                    : \"text-coffee-brown hover:bg-coffee-cream\"\n                }`}\n                data-testid=\"delivery-tab\"\n              >\n                Delivery\n              </button>\n              <button\n                onClick={() => setSelectedMethod(\"pickup\")}\n                className={`px-6 py-2 rounded-full font-medium transition-all ${\n                  selectedMethod === \"pickup\"\n                    ? \"bg-coffee-brown text-white\"\n                    : \"text-coffee-brown hover:bg-coffee-cream\"\n                }`}\n                data-testid=\"pickup-tab\"\n              >\n                Pickup\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Location Selection */}\n      <section className=\"py-12 bg-gradient-to-b from-latte to-cream relative\" data-testid=\"location-selection\">\n        <div className=\"absolute inset-0 doodle-bg opacity-30\"></div>\n        <div className=\"max-w-md mx-auto px-4 sm:px-6 lg:px-8 relative\">\n          <div className=\"bg-white/90 backdrop-blur-sm rounded-2xl p-8 shadow-xl border border-caramel/20 hover:shadow-2xl transition-all duration-300\">\n            <div className=\"text-center mb-6\">\n              <div className=\"w-16 h-16 bg-gradient-to-br from-caramel to-espresso rounded-full flex items-center justify-center mx-auto mb-4 animate-pulse\">\n                <MapPin className=\"w-8 h-8 text-white\" />\n              </div>\n              <h2 className=\"font-display text-2xl text-espresso mb-2\">Where would you like your order?</h2>\n              <p className=\"text-sm text-espresso/70\">We'll deliver fresh and hot to your location</p>\n            </div>\n            \n            <Button\n              onClick={handleCurrentLocation}\n              variant=\"outline\"\n              className=\"w-full mb-4 py-6 text-left justify-start border-caramel text-espresso hover:bg-caramel/10 hover:border-espresso transition-all duration-300 group\"\n              data-testid=\"current-location-button\"\n            >\n              <MapPin className=\"w-5 h-5 mr-3 group-hover:animate-bounce\" />\n              <span className=\"font-medium\">Use my current location</span>\n            </Button>\n            \n            <div className=\"relative mb-4\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-espresso/20\"></div>\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-4 bg-white text-espresso/60 font-medium\">or enter manually</span>\n              </div>\n            </div>\n            \n            <div className=\"relative\">\n              <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-espresso/40 w-5 h-5\" />\n              <Input\n                type=\"text\"\n                placeholder=\"Search street, locality, area...\"\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n                className=\"pl-12 py-6 text-lg border-caramel/30 focus:border-caramel rounded-xl bg-white/70 backdrop-blur-sm\"\n                data-testid=\"location-input\"\n                onKeyPress={(e) => e.key === 'Enter' && handleLocationSubmit()}\n              />\n            </div>\n            \n            {location && (\n              <Button\n                onClick={handleLocationSubmit}\n                className=\"w-full mt-6 py-6 bg-gradient-to-r from-caramel to-espresso hover:from-espresso hover:to-caramel text-white text-lg font-medium rounded-xl transform hover:scale-[1.02] transition-all duration-300 shadow-lg hover:shadow-xl\"\n                data-testid=\"continue-button\"\n              >\n                Continue to Menu →\n              </Button>\n            )}\n          </div>\n        </div>\n      </section>\n\n      {/* How it Works */}\n      <section className=\"py-20 bg-gradient-to-br from-foam via-cream to-latte relative overflow-hidden\" data-testid=\"how-it-works\">\n        <div className=\"absolute inset-0 doodle-bg opacity-20\"></div>\n        <div className=\"absolute top-10 right-10 w-40 h-40 bg-sage rounded-full opacity-10 animate-float\"></div>\n        <div className=\"absolute bottom-10 left-10 w-32 h-32 bg-blush rounded-full opacity-10 animate-bounce\"></div>\n        \n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 relative\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-display text-5xl font-bold text-espresso mb-4\">How it works</h2>\n            <p className=\"text-xl text-espresso/70 font-sans\">Simple steps to satisfy your cravings</p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-12\">\n            \n            {/* Step 1 */}\n            <div className=\"text-center group\" data-testid=\"step-location\">\n              <div className=\"relative mb-8\">\n                <div className=\"bg-gradient-to-br from-caramel to-espresso rounded-3xl p-8 mx-auto w-36 h-36 flex items-center justify-center shadow-xl group-hover:shadow-2xl transition-all duration-300 transform group-hover:scale-110 group-hover:-rotate-3\">\n                  <MapPin className=\"w-16 h-16 text-white group-hover:animate-bounce\" />\n                </div>\n                <div className=\"absolute -top-2 -right-2 w-8 h-8 bg-blush rounded-full flex items-center justify-center text-espresso font-bold text-sm animate-pulse\">\n                  1\n                </div>\n                <img \n                  src=\"https://images.unsplash.com/photo-1524850011238-e3d235c7d4c9?w=80&h=80&fit=crop&crop=center\" \n                  alt=\"Location pin\" \n                  className=\"absolute -bottom-4 -left-4 w-16 h-16 rounded-full border-4 border-white shadow-lg opacity-80\"\n                />\n              </div>\n              <h3 className=\"font-heading font-bold text-2xl text-espresso mb-4 group-hover:text-caramel transition-colors\">\n                Set your location\n              </h3>\n              <p className=\"text-espresso/70 leading-relaxed text-lg\">\n                Tell us where you want to get your items delivered with precision\n              </p>\n            </div>\n            \n            {/* Step 2 */}\n            <div className=\"text-center group\" data-testid=\"step-choose\">\n              <div className=\"relative mb-8\">\n                <div className=\"bg-gradient-to-br from-sage to-espresso rounded-3xl p-8 mx-auto w-36 h-36 flex items-center justify-center shadow-xl group-hover:shadow-2xl transition-all duration-300 transform group-hover:scale-110 group-hover:rotate-3\">\n                  <Package className=\"w-16 h-16 text-white group-hover:animate-wiggle\" />\n                </div>\n                <div className=\"absolute -top-2 -right-2 w-8 h-8 bg-blush rounded-full flex items-center justify-center text-espresso font-bold text-sm animate-pulse\" style={{animationDelay: '0.3s'}}>\n                  2\n                </div>\n                <img \n                  src=\"https://images.unsplash.com/photo-1511920170033-f8396924c348?w=80&h=80&fit=crop&crop=center\" \n                  alt=\"Coffee selection\" \n                  className=\"absolute -bottom-4 -right-4 w-16 h-16 rounded-full border-4 border-white shadow-lg opacity-80\"\n                />\n              </div>\n              <h3 className=\"font-heading font-bold text-2xl text-espresso mb-4 group-hover:text-sage transition-colors\">\n                Choose your items\n              </h3>\n              <p className=\"text-espresso/70 leading-relaxed text-lg\">\n                Browse our curated menu and add your favorite treats to cart\n              </p>\n            </div>\n            \n            {/* Step 3 */}\n            <div className=\"text-center group\" data-testid=\"step-delivery\">\n              <div className=\"relative mb-8\">\n                <div className=\"bg-gradient-to-br from-blush to-espresso rounded-3xl p-8 mx-auto w-36 h-36 flex items-center justify-center shadow-xl group-hover:shadow-2xl transition-all duration-300 transform group-hover:scale-110 group-hover:-rotate-3\">\n                  <Truck className=\"w-16 h-16 text-white group-hover:animate-bounce\" />\n                </div>\n                <div className=\"absolute -top-2 -right-2 w-8 h-8 bg-blush rounded-full flex items-center justify-center text-espresso font-bold text-sm animate-pulse\" style={{animationDelay: '0.6s'}}>\n                  3\n                </div>\n                <img \n                  src=\"https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=80&h=80&fit=crop&crop=center\" \n                  alt=\"Delivery\" \n                  className=\"absolute -bottom-4 -left-4 w-16 h-16 rounded-full border-4 border-white shadow-lg opacity-80\"\n                />\n              </div>\n              <h3 className=\"font-heading font-bold text-2xl text-espresso mb-4 group-hover:text-blush transition-colors\">\n                Enjoy fresh delivery\n              </h3>\n              <p className=\"text-espresso/70 leading-relaxed text-lg\">\n                Sit back and relax while we deliver hot, fresh items to your doorstep\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </>\n  );\n}\n","size_bytes":13136},"src/pages/order.tsx":{"content":"import { useState } from \"react\";\nimport Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { X, Plus, Minus, MapPin, ShoppingCart } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\n\ninterface MenuItem {\n  id: string;\n  name: string;\n  price: number;\n  description: string;\n  isVeg: boolean;\n  category: string;\n  image: string;\n  customizable?: boolean;\n  milkOptions?: { name: string; price: number }[];\n}\n\ninterface CartItem extends MenuItem {\n  quantity: number;\n  selectedMilk?: string;\n  milkPrice?: number;\n  totalPrice: number;\n}\n\nexport default function Order() {\n  const [selectedCategory, setSelectedCategory] = useState(\"Matcha Specials\");\n  const [selectedItem, setSelectedItem] = useState<MenuItem | null>(null);\n  const [isItemModalOpen, setIsItemModalOpen] = useState(false);\n  const [cart, setCart] = useState<CartItem[]>([]);\n  const [vegOnly, setVegOnly] = useState(false);\n  const [deliveryLocation, setDeliveryLocation] = useState(\"Mahalaxmi Temple, 26/A, Mahalaxmi West, Central West\");\n  const [quantity, setQuantity] = useState(1);\n  const [selectedMilk, setSelectedMilk] = useState(\"Regular Milk\");\n\n  const categories = [\n    \"Matcha Specials\",\n    \"Sandwiches\", \n    \"Iteeha Signatures\",\n    \"Desserts & Bakes\",\n    \"Hot Beverages\",\n    \"Cold Beverages\",\n    \"Cold Pressed Juices (Sugar Free)\",\n    \"Salads\",\n    \"Pasta\"\n  ];\n\n  const menuItems: MenuItem[] = [\n    // Matcha Specials\n    {\n      id: \"matcha-1\",\n      name: \"Classic Hot Matcha Latte\",\n      price: 320,\n      description: \"A Smooth Blend Of Matcha And Steamed Milk\",\n      isVeg: true,\n      category: \"Matcha Specials\",\n      image: \"https://images.unsplash.com/photo-1515823064-d6e0c04616a7?w=300&h=200&fit=crop&crop=center\",\n      customizable: true,\n      milkOptions: [\n        { name: \"Regular Milk\", price: 0 },\n        { name: \"Oat Milk\", price: 80 },\n        { name: \"Almond Milk\", price: 80 }\n      ]\n    },\n    {\n      id: \"matcha-2\", \n      name: \"Spiced Ginger Matcha Latte\",\n      price: 340,\n      description: \"Matcha And Steamed Milk With House Made Ginger Syrup\",\n      isVeg: true,\n      category: \"Matcha Specials\",\n      image: \"https://images.unsplash.com/photo-1497935586351-b67a49e012bf?w=300&h=200&fit=crop&crop=center\",\n      customizable: true,\n      milkOptions: [\n        { name: \"Regular Milk\", price: 0 },\n        { name: \"Oat Milk\", price: 80 },\n        { name: \"Almond Milk\", price: 80 }\n      ]\n    },\n    {\n      id: \"matcha-3\",\n      name: \"Blueberry Matcha Latte\", \n      price: 380,\n      description: \"Matcha And Milk With Blueberry Compote\",\n      isVeg: true,\n      category: \"Matcha Specials\",\n      image: \"https://images.unsplash.com/photo-1570197788417-0e82375c9371?w=300&h=200&fit=crop&crop=center\",\n      customizable: true,\n      milkOptions: [\n        { name: \"Regular Milk\", price: 0 },\n        { name: \"Oat Milk\", price: 80 },\n        { name: \"Almond Milk\", price: 80 }\n      ]\n    },\n    {\n      id: \"matcha-4\",\n      name: \"Signature Iced Matcha\",\n      price: 350,\n      description: \"Classic Matcha And Milk Over Ice\",\n      isVeg: true,\n      category: \"Matcha Specials\",\n      image: \"https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=300&h=200&fit=crop&crop=center\",\n      customizable: true,\n      milkOptions: [\n        { name: \"Regular Milk\", price: 0 },\n        { name: \"Oat Milk\", price: 80 },\n        { name: \"Almond Milk\", price: 80 }\n      ]\n    },\n    {\n      id: \"matcha-5\",\n      name: \"Golden Glow Matcha Latte\",\n      price: 370,\n      description: \"Matcha with turmeric and steamed milk\",\n      isVeg: true,\n      category: \"Matcha Specials\",\n      image: \"https://images.unsplash.com/photo-1544787219-7f47ccb76574?w=300&h=200&fit=crop&crop=center\",\n      customizable: true,\n      milkOptions: [\n        { name: \"Regular Milk\", price: 0 },\n        { name: \"Oat Milk\", price: 80 },\n        { name: \"Almond Milk\", price: 80 }\n      ]\n    },\n    {\n      id: \"matcha-6\",\n      name: \"Vanilla Matcha Latte\",\n      price: 360,\n      description: \"Matcha with vanilla syrup and steamed milk\",\n      isVeg: true,\n      category: \"Matcha Specials\",\n      image: \"https://gratefulgrazer.com/wp-content/uploads/2022/01/Vanilla-Matcha-Latte-60.jpg\",\n      customizable: true,\n      milkOptions: [\n        { name: \"Regular Milk\", price: 0 },\n        { name: \"Oat Milk\", price: 80 },\n        { name: \"Almond Milk\", price: 80 }\n      ]\n    },\n    // Hot Beverages\n    {\n      id: \"coffee-1\",\n      name: \"Espresso\",\n      price: 160,\n      description: \"Rich, bold, and concentrated coffee shot\",\n      isVeg: true,\n      category: \"Hot Beverages\",\n      image: \"https://images.unsplash.com/photo-1510707577719-ae7c14805e3a?w=300&h=200&fit=crop&crop=center\"\n    },\n    {\n      id: \"coffee-2\",\n      name: \"Americano\",\n      price: 180,\n      description: \"Espresso diluted with hot water\",\n      isVeg: true,\n      category: \"Hot Beverages\",\n      image: \"https://images.unsplash.com/photo-1461023058943-07fcbe16d735?w=300&h=200&fit=crop&crop=center\"\n    },\n    {\n      id: \"coffee-3\",\n      name: \"Latte\",\n      price: 200,\n      description: \"Smooth espresso with steamed milk\",\n      isVeg: true,\n      category: \"Hot Beverages\",\n      image: \"https://images.unsplash.com/photo-1561047029-3000c68339ca?w=300&h=200&fit=crop&crop=center\",\n      customizable: true,\n      milkOptions: [\n        { name: \"Regular Milk\", price: 0 },\n        { name: \"Oat Milk\", price: 80 },\n        { name: \"Almond Milk\", price: 80 }\n      ]\n    },\n    // Sandwiches\n    {\n      id: \"sandwich-1\",\n      name: \"Classic Spiced Chicken Sandwich\",\n      price: 330,\n      description: \"Tender spiced chicken with fresh vegetables\",\n      isVeg: false,\n      category: \"Sandwiches\",\n      image: \"https://www.sugarspicenmore.com/wp-content/uploads/2023/03/Chicken-Sandwiches-2-rotated.jpg\"\n    },\n    {\n      id: \"sandwich-2\",\n      name: \"Grilled Veg Pesto Sandwich\",\n      price: 350,\n      description: \"Grilled vegetables with house-made pesto\",\n      isVeg: true,\n      category: \"Sandwiches\",\n      image: \"https://images.unsplash.com/photo-1481070555726-e2fe8357725c?w=300&h=200&fit=crop&crop=center\"\n    }\n  ];\n\n  const filteredItems = menuItems.filter(item => {\n    const categoryMatch = item.category === selectedCategory;\n    const vegMatch = !vegOnly || item.isVeg;\n    return categoryMatch && vegMatch;\n  });\n\n  const openItemModal = (item: MenuItem) => {\n    setSelectedItem(item);\n    setQuantity(1);\n    setSelectedMilk(\"Regular Milk\");\n    setIsItemModalOpen(true);\n  };\n\n  const closeItemModal = () => {\n    setIsItemModalOpen(false);\n    setSelectedItem(null);\n  };\n\n  const addToCart = () => {\n    if (!selectedItem) return;\n\n    const milkOption = selectedItem.milkOptions?.find(m => m.name === selectedMilk);\n    const milkPrice = milkOption?.price || 0;\n    const totalPrice = (selectedItem.price + milkPrice) * quantity;\n\n    const cartItem: CartItem = {\n      ...selectedItem,\n      quantity,\n      selectedMilk: selectedItem.customizable ? selectedMilk : undefined,\n      milkPrice: selectedItem.customizable ? milkPrice : undefined,\n      totalPrice\n    };\n\n    setCart(prev => [...prev, cartItem]);\n    closeItemModal();\n  };\n\n  const getTotalCart = () => {\n    return cart.reduce((total, item) => total + item.totalPrice, 0);\n  };\n\n  return (\n    <>\n      <title>Order Online - Iteeha Coffee | Fresh Coffee & Food Delivery</title>\n      <meta name=\"description\" content=\"Order fresh coffee, food, and beverages online from Iteeha Coffee. Delivery available across Mumbai. Experience our matcha specials and signature items.\" />\n      \n      <Navigation />\n      \n      {/* Header */}\n      <section className=\"pt-24 pb-6 bg-white border-b\" data-testid=\"order-header\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <img \n                src=\"https://iteeha.coffee/images/vfx.png\" \n                alt=\"Iteeha Coffee\" \n                className=\"h-8 w-auto\"\n              />\n              <div>\n                <h1 className=\"font-inter font-bold text-2xl text-coffee-brown\">Iteeha Coffee</h1>\n                <p className=\"text-sm text-gray-600\">Iteeha Coffee • Mahalaxmi</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Label htmlFor=\"veg-only\" className=\"text-sm font-medium\">Veg only</Label>\n                <Switch\n                  id=\"veg-only\"\n                  checked={vegOnly}\n                  onCheckedChange={setVegOnly}\n                  data-testid=\"veg-toggle\"\n                />\n              </div>\n              \n              {cart.length > 0 && (\n                <Button className=\"bg-coffee-brown hover:bg-coffee-dark text-white\" data-testid=\"cart-button\">\n                  <ShoppingCart className=\"w-4 h-4 mr-2\" />\n                  {cart.length} items - ₹{getTotalCart()}\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Delivery Info */}\n      <section className=\"py-4 bg-coffee-light\" data-testid=\"delivery-info\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"font-medium text-coffee-brown\">Delivery</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <MapPin className=\"w-4 h-4 text-gray-600\" />\n              <span className=\"text-sm\">Delivery to: {deliveryLocation}</span>\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-coffee-brown hover:text-coffee-dark\">\n                Change\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Main Content */}\n      <section className=\"py-8\" data-testid=\"order-main\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-4 gap-8\">\n            \n            {/* Sidebar Menu */}\n            <div className=\"lg:col-span-1\" data-testid=\"menu-sidebar\">\n              <div className=\"bg-white rounded-lg shadow-sm border p-6 sticky top-24\">\n                <h2 className=\"font-inter font-bold text-xl text-coffee-brown mb-6\">Menu</h2>\n                <nav className=\"space-y-2\">\n                  {categories.map((category) => (\n                    <button\n                      key={category}\n                      onClick={() => setSelectedCategory(category)}\n                      className={`block w-full text-left px-4 py-2 rounded-lg font-medium transition-colors ${\n                        selectedCategory === category\n                          ? \"bg-coffee-brown text-white\"\n                          : \"text-gray-700 hover:bg-coffee-light\"\n                      }`}\n                      data-testid={`category-${category.toLowerCase().replace(/\\s+/g, '-')}`}\n                    >\n                      {category}\n                    </button>\n                  ))}\n                </nav>\n              </div>\n            </div>\n\n            {/* Menu Items */}\n            <div className=\"lg:col-span-3\" data-testid=\"menu-items\">\n              <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n                <h2 className=\"font-inter font-bold text-2xl text-coffee-brown mb-8\" data-testid=\"category-title\">\n                  {selectedCategory}\n                </h2>\n                \n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  {filteredItems.map((item) => (\n                    <div key={item.id} className=\"bg-white rounded-xl shadow-lg border hover:shadow-xl transition-all duration-300 overflow-hidden group\" data-testid={`menu-item-${item.id}`}>\n                      <div className=\"relative h-48 overflow-hidden\">\n                        <img \n                          src={item.image} \n                          alt={item.name}\n                          className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-110\"\n                        />\n                        <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent\"></div>\n                        <div className=\"absolute top-4 left-4\">\n                          {item.isVeg && <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800 border-2 border-white\">●</Badge>}\n                        </div>\n                        <div className=\"absolute top-4 right-4 bg-caramel text-white px-3 py-1 rounded-full font-bold text-lg\">\n                          ₹{item.price}\n                        </div>\n                      </div>\n                      <div className=\"p-6\">\n                        <h3 className=\"font-heading font-semibold text-xl text-espresso mb-2 group-hover:text-caramel transition-colors\">\n                          {item.name}\n                        </h3>\n                        <p className=\"text-charcoal text-sm mb-4 leading-relaxed\">{item.description}</p>\n                        <Button \n                          onClick={() => item.customizable ? openItemModal(item) : addToCart()}\n                          className=\"w-full bg-gradient-to-r from-caramel to-espresso hover:from-espresso hover:to-caramel text-white font-medium py-3 rounded-xl transition-all duration-300 transform hover:scale-[1.02]\"\n                          data-testid={`add-${item.id}`}\n                        >\n                          ADD TO CART\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Item Customization Modal */}\n      <Dialog open={isItemModalOpen} onOpenChange={setIsItemModalOpen}>\n        <DialogContent className=\"sm:max-w-md\" data-testid=\"item-modal\">\n          <DialogHeader>\n            <DialogTitle className=\"font-inter text-xl text-coffee-brown\">\n              {selectedItem?.name}\n            </DialogTitle>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"absolute right-4 top-4\"\n              onClick={closeItemModal}\n              data-testid=\"modal-close\"\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </DialogHeader>\n          \n          {selectedItem && (\n            <div className=\"space-y-6\" data-testid=\"modal-content\">\n              <div>\n                <h4 className=\"font-medium text-coffee-brown mb-3\">Quantity</h4>\n                <div className=\"flex items-center justify-between bg-gray-50 rounded-lg p-3\">\n                  <span className=\"text-sm text-gray-600\">1/1 selected</span>\n                </div>\n              </div>\n              \n              {selectedItem.customizable && selectedItem.milkOptions && (\n                <div>\n                  <h4 className=\"font-medium text-coffee-brown mb-3\">Milk Options</h4>\n                  <div className=\"space-y-2\">\n                    {selectedItem.milkOptions.map((milk) => (\n                      <label key={milk.name} className=\"flex items-center justify-between p-3 border rounded-lg cursor-pointer hover:bg-gray-50\">\n                        <div className=\"flex items-center\">\n                          <input\n                            type=\"radio\"\n                            name=\"milk\"\n                            value={milk.name}\n                            checked={selectedMilk === milk.name}\n                            onChange={(e) => setSelectedMilk(e.target.value)}\n                            className=\"mr-3\"\n                            data-testid={`milk-${milk.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                          />\n                          <span>{milk.name}</span>\n                        </div>\n                        {milk.price > 0 && (\n                          <span className=\"text-coffee-brown font-medium\">+₹{milk.price}</span>\n                        )}\n                      </label>\n                    ))}\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"flex items-center justify-between bg-coffee-brown text-white p-4 rounded-lg\">\n                <span className=\"font-bold text-lg\">\n                  ₹{selectedItem.price + (selectedItem.milkOptions?.find(m => m.name === selectedMilk)?.price || 0)}\n                </span>\n                <Button \n                  onClick={addToCart}\n                  className=\"bg-coffee-gold hover:bg-coffee-cream hover:text-coffee-brown text-white\"\n                  data-testid=\"add-to-cart-button\"\n                >\n                  ADD TO CART\n                </Button>\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      <Footer />\n    </>\n  );\n}\n","size_bytes":17379},"src/pages/privacy.tsx":{"content":"import Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\n\nexport default function Privacy() {\n  return (\n    <>\n      <title>Privacy Policy - Iteeha Coffee | Data Protection & Privacy</title>\n      <meta name=\"description\" content=\"Iteeha Coffee's privacy policy. Learn how we collect, use, and protect your personal information. Contact us at connect@iteeha.coffee for privacy concerns.\" />\n      \n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-16 bg-coffee-light\" data-testid=\"privacy-hero\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center\">\n            <h1 className=\"font-inter font-bold text-5xl md:text-6xl text-coffee-brown mb-6\" data-testid=\"privacy-hero-title\">\n              Privacy Policy\n            </h1>\n            <p className=\"text-xl text-charcoal max-w-3xl mx-auto\" data-testid=\"privacy-hero-subtitle\">\n              Your privacy is important to us. This policy explains how we handle your personal information.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Privacy Content */}\n      <section className=\"py-20 bg-white\" data-testid=\"privacy-content\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"prose prose-lg max-w-none\">\n            \n            {/* Introduction */}\n            <div className=\"mb-12\" data-testid=\"privacy-intro\">\n              <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                At Iteeha Coffee, we are committed to protecting your privacy. This Privacy Policy explains \n                how we collect, use, and disclose your personal information when you visit our cafes or use \n                our services.\n              </p>\n            </div>\n\n            {/* Information We Collect */}\n            <div className=\"mb-12\" data-testid=\"privacy-collection\">\n              <h2 className=\"font-inter font-bold text-3xl text-coffee-brown mb-6\">\n                Information We Collect\n              </h2>\n              <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                We may collect personal information such as your name, email address, phone number, and \n                payment details when you:\n              </p>\n              <ul className=\"list-disc pl-6 text-charcoal text-lg leading-relaxed mb-6 space-y-2\">\n                <li>Register for an account or loyalty program</li>\n                <li>Make a purchase on our website or in our cafes</li>\n                <li>Contact us through our website or social media</li>\n                <li>Participate in surveys or promotional activities</li>\n                <li>Subscribe to our newsletter or marketing communications</li>\n              </ul>\n            </div>\n\n            {/* How We Use Your Information */}\n            <div className=\"mb-12\" data-testid=\"privacy-usage\">\n              <h2 className=\"font-inter font-bold text-3xl text-coffee-brown mb-6\">\n                How We Use Your Information\n              </h2>\n              <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                We use your personal information to:\n              </p>\n              <ul className=\"list-disc pl-6 text-charcoal text-lg leading-relaxed mb-6 space-y-2\">\n                <li>Provide and improve our services and customer experience</li>\n                <li>Process transactions and manage your orders</li>\n                <li>Communicate with you about your orders, account, and our services</li>\n                <li>Send you marketing communications with your consent</li>\n                <li>Analyze usage patterns to improve our offerings</li>\n                <li>Comply with legal obligations and protect our rights</li>\n              </ul>\n            </div>\n\n            {/* Sharing Your Information */}\n            <div className=\"mb-12\" data-testid=\"privacy-sharing\">\n              <h2 className=\"font-inter font-bold text-3xl text-coffee-brown mb-6\">\n                Sharing Your Information\n              </h2>\n              <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                We may share your personal information with:\n              </p>\n              <ul className=\"list-disc pl-6 text-charcoal text-lg leading-relaxed mb-6 space-y-2\">\n                <li>Third-party service providers who assist us in operating our website and providing our services</li>\n                <li>Payment processors to handle transactions securely</li>\n                <li>Legal authorities when required by law or to protect our rights</li>\n              </ul>\n              <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                <strong>We do not sell or rent your personal information to third parties.</strong>\n              </p>\n            </div>\n\n            {/* Data Security */}\n            <div className=\"mb-12\" data-testid=\"privacy-security\">\n              <h2 className=\"font-inter font-bold text-3xl text-coffee-brown mb-6\">\n                Data Security\n              </h2>\n              <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                We implement appropriate security measures to protect your personal information from \n                unauthorized access, disclosure, alteration, or destruction. This includes:\n              </p>\n              <ul className=\"list-disc pl-6 text-charcoal text-lg leading-relaxed mb-6 space-y-2\">\n                <li>Encryption of sensitive data during transmission</li>\n                <li>Secure servers and data storage systems</li>\n                <li>Regular security assessments and updates</li>\n                <li>Limited access to personal information on a need-to-know basis</li>\n              </ul>\n            </div>\n\n            {/* Cookies */}\n            <div className=\"mb-12\" data-testid=\"privacy-cookies\">\n              <h2 className=\"font-inter font-bold text-3xl text-coffee-brown mb-6\">\n                Cookies and Tracking Technologies\n              </h2>\n              <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                We use cookies and similar technologies to:\n              </p>\n              <ul className=\"list-disc pl-6 text-charcoal text-lg leading-relaxed mb-6 space-y-2\">\n                <li>Analyze website traffic and user behavior</li>\n                <li>Customize your online experience</li>\n                <li>Remember your preferences and settings</li>\n                <li>Improve our website functionality</li>\n              </ul>\n              <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                You can adjust your browser settings to refuse cookies, but this may affect certain \n                features of our website.\n              </p>\n            </div>\n\n            {/* Your Rights */}\n            <div className=\"mb-12\" data-testid=\"privacy-rights\">\n              <h2 className=\"font-inter font-bold text-3xl text-coffee-brown mb-6\">\n                Your Rights\n              </h2>\n              <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                You have the right to:\n              </p>\n              <ul className=\"list-disc pl-6 text-charcoal text-lg leading-relaxed mb-6 space-y-2\">\n                <li>Access, correct, or delete your personal information</li>\n                <li>Withdraw consent for marketing communications at any time</li>\n                <li>Request information about how your data is processed</li>\n                <li>File a complaint with relevant data protection authorities</li>\n              </ul>\n            </div>\n\n            {/* Prohibited Activities */}\n            <div className=\"mb-12\" data-testid=\"privacy-prohibited\">\n              <h2 className=\"font-inter font-bold text-3xl text-coffee-brown mb-6\">\n                Prohibited Activities\n              </h2>\n              <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                When using our website and services, you agree not to engage in any unlawful or \n                prohibited activities, including but not limited to:\n              </p>\n              <ul className=\"list-disc pl-6 text-charcoal text-lg leading-relaxed mb-6 space-y-2\">\n                <li>Hacking or attempting to gain unauthorized access to our systems</li>\n                <li>Distributing spam, malware, or other harmful content</li>\n                <li>Violating the rights of other users or third parties</li>\n                <li>Using our services for any illegal purposes</li>\n              </ul>\n            </div>\n\n            {/* Changes to Privacy Policy */}\n            <div className=\"mb-12\" data-testid=\"privacy-changes\">\n              <h2 className=\"font-inter font-bold text-3xl text-coffee-brown mb-6\">\n                Changes to This Privacy Policy\n              </h2>\n              <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                We reserve the right to modify or update this Privacy Policy at any time. We will \n                notify you of any significant changes by posting the revised policy on our website \n                and updating the effective date. Your continued use of our services after such \n                changes constitutes acceptance of the updated policy.\n              </p>\n            </div>\n\n            {/* Contact Information */}\n            <div className=\"bg-coffee-light rounded-2xl p-8\" data-testid=\"privacy-contact\">\n              <h2 className=\"font-inter font-bold text-3xl text-coffee-brown mb-6\">\n                Contact Us\n              </h2>\n              <p className=\"text-charcoal text-lg leading-relaxed mb-6\">\n                If you have any questions or concerns about our Privacy Policy, or if you would like \n                to exercise your rights regarding your personal information, please contact us at:\n              </p>\n              <div className=\"bg-white rounded-xl p-6\">\n                <div className=\"flex items-center space-x-4 mb-4\">\n                  <div className=\"bg-coffee-brown text-white w-12 h-12 rounded-full flex items-center justify-center\">\n                    <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26c.67.36 1.45.36 2.12 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"font-inter font-semibold text-xl text-coffee-brown\">Email</h3>\n                    <p className=\"text-charcoal\">connect@iteeha.coffee</p>\n                  </div>\n                </div>\n                <p className=\"text-charcoal\">\n                  We will respond to your inquiry within a reasonable timeframe and assist you with \n                  any privacy-related concerns.\n                </p>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </>\n  );\n}\n","size_bytes":11102},"src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},".local/state/replit/agent/progress_tracker.md":{"content":"[x] 1. Install the required packages\n[ ] 2. Configure Vite to bind to 0.0.0.0:5000 for Replit compatibility\n[ ] 3. Restart the workflow to see if the project is working\n[ ] 4. Verify the project is working using the feedback tool\n[ ] 5. Inform user the import is completed and they can start building, mark the import as completed using the complete_project_import tool","size_bytes":369},"src/components/CoffeeVerseEffects.tsx":{"content":"import { useEffect, useState } from \"react\";\n\nexport default function CoffeeVerseEffects() {\n  const [beans, setBeans] = useState<Array<{ id: number; left: number; delay: number }>>([]);\n  const [steamParticles, setSteamParticles] = useState<Array<{ id: number; left: number; delay: number }>>([]);\n\n  useEffect(() => {\n    // Create falling coffee beans\n    const createBeans = () => {\n      const newBeans = Array.from({ length: 8 }, (_, i) => ({\n        id: Date.now() + i,\n        left: Math.random() * 100,\n        delay: Math.random() * 8\n      }));\n      setBeans(newBeans);\n    };\n\n    // Create steam particles\n    const createSteam = () => {\n      const newSteam = Array.from({ length: 12 }, (_, i) => ({\n        id: Date.now() + i + 100,\n        left: Math.random() * 100,\n        delay: Math.random() * 4\n      }));\n      setSteamParticles(newSteam);\n    };\n\n    createBeans();\n    createSteam();\n\n    const beanInterval = setInterval(createBeans, 10000);\n    const steamInterval = setInterval(createSteam, 6000);\n\n    return () => {\n      clearInterval(beanInterval);\n      clearInterval(steamInterval);\n    };\n  }, []);\n\n  return (\n    <div className=\"coffee-beans-container\">\n      {/* Falling Coffee Beans */}\n      {beans.map((bean) => (\n        <div\n          key={bean.id}\n          className=\"falling-bean animate-coffee-beans\"\n          style={{\n            left: `${bean.left}%`,\n            animationDelay: `${bean.delay}s`,\n          }}\n        />\n      ))}\n\n      {/* Steam Effects */}\n      {steamParticles.map((particle) => (\n        <div\n          key={particle.id}\n          className=\"steam-effect animate-steam\"\n          style={{\n            left: `${particle.left}%`,\n            bottom: '20%',\n            animationDelay: `${particle.delay}s`,\n          }}\n        />\n      ))}\n\n      {/* Magical Sparkles */}\n      <div className=\"fixed top-1/4 left-1/4 w-2 h-2\">\n        <div className=\"sparkle\" />\n        <div className=\"sparkle\" />\n        <div className=\"sparkle\" />\n        <div className=\"sparkle\" />\n      </div>\n      <div className=\"fixed top-3/4 right-1/4 w-2 h-2\">\n        <div className=\"sparkle\" />\n        <div className=\"sparkle\" />\n      </div>\n      <div className=\"fixed top-1/2 left-3/4 w-2 h-2\">\n        <div className=\"sparkle\" />\n        <div className=\"sparkle\" />\n        <div className=\"sparkle\" />\n      </div>\n    </div>\n  );\n}","size_bytes":2390}},"version":1}